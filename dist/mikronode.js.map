{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f1058be79aa2502fb266","webpack:///./src/index.js","webpack:///./~/simple-assign/index.js","webpack:///external \"util\"","webpack:///external \"net\"","webpack:///external \"tls\"","webpack:///./~/promise/index.js","webpack:///./~/promise/lib/index.js","webpack:///./~/promise/lib/core.js","webpack:///./~/asap/raw.js","webpack:///external \"domain\"","webpack:///./~/promise/lib/done.js","webpack:///./~/promise/lib/finally.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/node-extensions.js","webpack:///./~/asap/asap.js","webpack:///./~/promise/lib/synchronous.js","webpack:///external \"rxjs\"","webpack:///external \"core-decorators\"","webpack:///external \"crypto\"","webpack:///external \"dns\"","webpack:///./src/Util.js","webpack:///./src/constants.js","webpack:///./src/parser.js","webpack:///./src/Connection.js","webpack:///external \"events\"","webpack:///./src/Channel.js"],"names":["Socket","net","nullString","String","fromCharCode","MikroNode","host","port","timeout","DEBUG","NONE","CONNECTION","DISCONNECTED","debug","setDebug","connection","opts","setTimeout","arg1","arg2","INFO","console","log","cb","SILLY","SocketStream","stream","getStream","close","sentence","complete","login","user","password","promise","resolve","reject","write","Connection","md5","crypto","createHash","update","Buffer","concat","from","challenge","digest","then","err","Promise","isIPv6","isIPv4","fn","family","a","b","dns","resolve4","resolve6","data","connect","socketOpts","args","take","subscribe","catch","api","CHANNEL","EVENT","resultsToObj","getUnwrappedPromise","tls","e","destroy","TLS","TLSSocket","Subject","holdBuffer","do","JSON","stringify","d","map","o","x","split","join","length","s","parser","parse","error","filter","flatMap","Object","keys","forEach","k","Observable","share","fromEvent","scan","last","i","buff","end","idx","packet","toString","indexOf","slice","next","alloc","on","CONNECTED","ERROR","setKeepAlive","len","line","CONNECTING","res","rej","localAddress","localPort","encrypted","authorized","authorizationError","protocol","getProtocol","alpnProtocol","npnProtocol","cipher","getCipher","cert","getPeerCertificate","read","raw","Array","isArray","pop","WARN","STRING_TYPE","autobind","encodeString","byteLength","offset","utf8Write","decodePacket","buf","push","hexDump","hex","cref","j","Number","nullfunc","rejectionWatcher","WeakMap","process","event","cmd","Error","createdAt","stack","r","objToAPIParams","obj","type","prefix","reduce","p","f","field","value","connectionLabels","WAITING","CLOSING","CLOSED","OPEN","RUNNING","DONE","TRAP","TRAP_TAG","DONE_RET","FATAL","FATAL_TAG","TAG","DONE_RET_TAG","DONE_TAG","RE","DATA","peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","other","description","ch","charCodeAt","toUpperCase","replace","describeExpectation","describeExpected","descriptions","sort","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","tag","peg$c2","peg$c3","peg$c4","peg$c5","re","peg$c6","peg$c7","peg$c8","peg$literalExpectation","peg$c9","peg$c10","id","peg$c11","peg$c12","peg$c13","peg$c14","peg$classExpectation","peg$c15","peg$c16","peg$c17","peg$c18","v","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","t","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$anyExpectation","peg$c29","ret","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","subid","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","peg$otherExpectation","peg$buildSimpleError","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","s3","peg$parses","peg$parsepacket","peg$parsenull","s4","s5","peg$parsere","peg$parsetag","peg$parsedata","peg$parseend","substr","peg$parseidentifier","peg$parsevalue","test","charAt","s6","s7","peg$parsefatal","peg$parsetrap","peg$parsecolon","peg$parsens","module","exports","SyntaxError","loginHandler","takeWhile","rejectAndClose","emit","parseInt","shift","c","getId","closeOnDone","Date","some","matchId","RegExp","cmdTrack","channel","getChannel","bind","splice","status","cl","Channel","events","EventEmitter","commandId","command","race","partition","isListen","takeUntil","acc","fatal","listeners","listenerStream","call","arguments","getCommandId","lastIndexOf","d2","of","createStream","DATA_RET","DATA_RET_TAG","force","removeAllListeners","func"],"mappings":"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Y,uBAAZ,CAAvB;AACA;AACH;AACD,iBAAI,QAAOsC,IAAP,yCAAOA,IAAP,OAAekF,sBAAnB,EAAgClF,OAAK,CAACA,IAAD,CAAL,CAAhC,KACK,IAAI,CAAC8E,MAAMC,OAAN,CAAc/E,IAAd,CAAL,EAA0B;AAC/BA,kBAAKqC,OAAL,CAAa,aAAK;AACd,qBAAI;AACA,4CAAYxF,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,kCAAgCkF,CAA5C,CAAzB;AACA,yCAAYnE,KAAZ,CAAkB,wBAAamE,CAAb,EAAe,sBAAW/F,iBAAMe,KAAhC,CAAlB;AACH,kBAHD,CAGE,OAAMoE,KAAN,EAAa;AACX,4CAAeA,KAAf,CAAqBA,KAArB;AACH;AACJ,cAPD;AAQA,+BAAYvD,KAAZ,CAAkBnC,UAAlB;AACH;;;;6DAtBA6I,wB;;;;;;;;;;AC1aL;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA,kC;;;;;;;;;ACAA,iC;;;;;;;;;ACAA,iC;;;;;;;;;ACAA;;AAEA;;;;;;;;;;ACFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAqD,cAAc;AACnE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;ACpNA;;AAEA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;ACpGA,oC;;;;;;;;;ACAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;;;;;;;;;ACZA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA,MAAK;AACL,IAAG;AACH;;;;;;;;;;ACfA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,sCAAsC;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA,IAAG;AACH;;AAEA;AACA,WAAU;AACV;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;;;;;;;;;;ACzLA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB,cAAa,SAAS,EAAE,OAAO,SAAS,EAAE;AAC1C,KAAI;AACJ;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,gDAA+C;AAC/C,sBAAqB;AACrB,4CAA2C;AAC3C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,SAAQ,SAAS;AACjB,OAAM,EAAE;AACR,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA,gDAA+C;AAC/C,sBAAqB;AACrB,eAAc;AACd,uCAAsC;AACtC,gDAA+C;AAC/C,6CAA4C;AAC5C,qBAAoB,sBAAsB,OAAO;AACjD,6BAA4B;AAC5B,OAAM;AACN,OAAM;AACN,4CAA2C;AAC3C,kCAAiC;AACjC,cAAa;AACb,0BAAyB;AACzB;AACA;AACA;AACA,8FAA6F;AAC7F,gBAAe;AACf;AACA,MAAK;AACL;AACA,2BAA0B;AAC1B,iCAAgC;AAChC,OAAM;;AAEN;AACA;AACA;AACA,SAAQ,SAAS;AACjB,OAAM,EAAE;AACR,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA,MAAK;AACL,IAAG;AACH;;;;;;;;;;ACjIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7DA,iD;;;;;;;;;ACAA,iD;;;;;;;;;ACAA,oC;;;;;;;;;ACAA,iC;;;;;;;;;;;;;;ACAA,UAASC,YAAT,CAAsBvD,CAAtB,EAAwBP,CAAxB,EAA2B;AACvB,SAAItB,OAAO,IAAX;AACA,SAAI0D,MAAM3E,OAAOsG,UAAP,CAAkBxD,CAAlB,CAAV;AACA,SAAIyD,SAAO,CAAX;;AAEA,SAAI5B,MAAM,IAAV,EAAgB;AACR1D,gBAAK,IAAIjB,MAAJ,CAAW2E,MAAI,CAAf,CAAL;AACA1D,cAAKsF,QAAL,IAAe5B,GAAf;AACP,MAHD,MAIA,IAAIA,MAAM,MAAV,EAAkB;AACV1D,gBAAK,IAAIjB,MAAJ,CAAW2E,MAAI,CAAf,CAAL;AACAA,gBAAO,MAAP;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,CAAR,GAAa,IAA5B;AACA1D,cAAKsF,QAAL,IAAe5B,MAAM,IAArB;AACP,MALD,MAMA,IAAIA,MAAM,QAAV,EAAoB;AACZ1D,gBAAK,IAAIjB,MAAJ,CAAW2E,MAAI,CAAf,CAAL;AACAA,gBAAO,QAAP;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,EAAR,GAAc,IAA7B;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,CAAR,GAAa,IAA5B;AACA1D,cAAKsF,QAAL,IAAe5B,MAAM,IAArB;AACP,MAND,MAOA,IAAIA,MAAM,UAAV,EAAsB;AACd1D,gBAAK,IAAIjB,MAAJ,CAAW2E,MAAI,CAAf,CAAL;AACAA,gBAAO,UAAP;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,EAAR,GAAc,IAA7B;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,EAAR,GAAc,IAA7B;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,CAAR,GAAa,IAA5B;AACA1D,cAAKsF,QAAL,IAAe5B,MAAM,IAArB;AACP,MAPD,MAOO;AACH1D,gBAAK,IAAIjB,MAAJ,CAAW2E,MAAI,CAAf,CAAL;AACA1D,cAAKsF,QAAL,IAAe,IAAf;AACAtF,cAAKsF,QAAL,IAAgB5B,OAAO,EAAR,GAAc,IAA7B;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,EAAR,GAAc,IAA7B;AACA1D,cAAKsF,QAAL,IAAgB5B,OAAO,CAAR,GAAa,IAA5B;AACA1D,cAAKsF,QAAL,IAAe5B,MAAM,IAArB;AACH;AACD1D,UAAKuF,SAAL,CAAe1D,CAAf,EAAiByD,MAAjB;AACAhE,UAAG7D,QAAQC,GAAR,CAAY,UAAZ,EAAuBsC,IAAvB,CAAH;AACA,YAAOA,IAAP;AACH;;AAED,UAASwF,YAAT,CAAsBxF,IAAtB,EAA2B;AACvB,SAAI,CAACA,KAAK4B,MAAV,EAAkB,OAAO,EAAP;AAClB,SAAM6D,MAAI,EAAV;AACA,SAAI1C,MAAI,CAAR;AACA,YAAOA,MAAI/C,KAAK4B,MAAhB,EAAwB;AACpB,aAAI8B,YAAJ;AACA,aAAI9D,IAAEI,KAAK+C,KAAL,CAAN;AACA,aAAInD,IAAE,GAAN,EAAW;AAAE;AACT,iBAAI,CAACA,IAAE,GAAH,KAAS,GAAb,EAAkB;AACd8D,uBAAI,CAAC,CAAC9D,IAAE,EAAH,KAAQ,CAAT,IAAYI,KAAK+C,KAAL,CAAhB;AACH,cAFD,MAEO;AACH,qBAAI,CAACnD,IAAI,GAAL,KAAa,GAAjB,EAAsB;AAClB8D,2BAAM,CAAC,CAAC9D,IAAI,EAAL,KAAY,CAAb,IAAmBI,KAAK+C,KAAL,CAAzB;AACAW,2BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACH,kBAHD,MAGO;AACH,yBAAI,CAACnD,IAAI,GAAL,KAAa,GAAjB,EAAsB;AAClB8D,+BAAM,CAAC,CAAC9D,IAAI,EAAL,KAAY,CAAb,IAAmBI,KAAK+C,KAAL,CAAzB;AACAW,+BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACAW,+BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACH,sBAJD,MAIO;AACHW,+BAAM1D,KAAK+C,KAAL,CAAN;AACAW,+BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACAW,+BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACAW,+BAAM,CAACA,OAAO,CAAR,IAAc1D,KAAK+C,KAAL,CAApB;AACH;AACJ;AACJ;AACJ,UApBD,MAoBO;AACHW,mBAAI9D,CAAJ;AACH;AACD;AACA6F,aAAIC,IAAJ,CAAS1F,KAAKmD,KAAL,CAAWJ,GAAX,EAAeA,MAAIW,GAAnB,EAAwBT,QAAxB,CAAiC,MAAjC,CAAT;AACAF,gBAAKW,GAAL;AACH;AACD,YAAO+B,GAAP;AACH;AACD;AACA,UAASE,OAAT,CAAiB3F,IAAjB,EAAuB;AACnB,SAAI4F,MAAI,EAAR;AACA,SAAIC,OAAK,EAAT;AACA,SAAIjD,IAAE,CAAN;AAAA,SAAQkD,IAAE,CAAV;AACA,UAAKA,IAAE,CAAP,EAASA,IAAE9F,KAAK4B,MAAhB,EAAuBkE,GAAvB,EAA4B;AACxBlD,aAAEkD,IAAE,CAAJ;AACA;AACA,aAAI9F,KAAK8F,CAAL,IAAQ,EAAR,IAAY9F,KAAK8F,CAAL,IAAQ,GAAxB,EAA6BD,KAAKjD,CAAL,IAAQ,GAAR,CAA7B,KACKiD,KAAKjD,CAAL,IAAQrG,OAAOC,YAAP,CAAoBwD,KAAK8F,CAAL,CAApB,CAAR;AACLF,aAAIhD,CAAJ,IAAOmD,OAAO/F,KAAK8F,CAAL,CAAP,EAAgB7C,QAAhB,CAAyB,EAAzB,CAAP;AACA,gBAAO2C,IAAIhD,CAAJ,EAAOhB,MAAP,GAAgB,CAAvB;AAA0BgE,iBAAIhD,CAAJ,IAAS,MAAMgD,IAAIhD,CAAJ,CAAf;AAA1B,UACA,IAAIgD,IAAIhE,MAAJ,IAAY,CAAhB,EAAmB;AACfnE,qBAAQC,GAAR,CAAY,cAAZ,EAA2BoI,IAAE,CAA7B,EAA+BF,IAAIjE,IAAJ,CAAS,GAAT,CAA/B,EAA6CkE,KAAKlE,IAAL,CAAU,EAAV,CAA7C;AACAiE,mBAAI,EAAJ;AACAC,oBAAK,EAAL;AACH;AACJ;AACD,SAAIjD,KAAG,CAAP,EAAU;AACNnF,iBAAQC,GAAR,CAAYkI,IAAIjE,IAAJ,CAAS,GAAT,IAAc,MAAd,GAAsBkE,KAAKlE,IAAL,CAAU,EAAV,CAAlC;AACAiE,eAAI,EAAJ;AACAC,gBAAK,EAAL;AACH;AACJ;;AAED;AACA;AACA,UAASG,QAAT,GAAmB,CAAE;AACrB,KAAMC,mBAAiB,IAAIC,OAAJ,EAAvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,SAAQ7C,EAAR,CAAW,oBAAX,EAAgC,UAAS8C,KAAT,EAAe9H,OAAf,EAAuB;AACnD,SAAI8H,MAAMC,GAAV,EAAe;AACf;AACA;AACA;AACI5I,aAAQuE,KAAR,CAAc,uBAAd,EAAsCZ,KAAKC,SAAL,CAAe+E,KAAf,EAAqB,IAArB,EAA0B,CAA1B,CAAtC,EAAmE,IAAnE,EAAwE9H,OAAxE;AACP,EAND;;AAQA;AACA;AACA;AACA;;AAEA,UAASqC,mBAAT,GAA+B;AAC3B,SAAIpC,iBAAJ;AAAA,SAAYC,gBAAZ;AACA,SAAMqC,IAAI,IAAIyF,KAAJ,EAAV;AACA,SAAMhI,UAAU,IAAIgB,OAAJ,CAAY,UAACuE,GAAD,EAAKC,GAAL,EAAW;AACnCvF,oBAAQsF,GAAR;AACArF,mBAAOsF,GAAP;AACH,MAHe,CAAhB;AAIAxF,aAAQiI,SAAR,GAAkB1F,EAAE2F,KAAF,CAAQ9E,KAAR,CAAc,IAAd,EAAoByB,KAApB,CAA0B,CAA1B,EAA4B,CAA5B,EAA+BxB,IAA/B,CAAoC,IAApC,CAAlB;AACA,YAAO;AACH,aAAIrD,OAAJ,GAAc;AACV,oBAAOA,OAAP;AACH,UAHE;AAIHC,kBAAQ,mBAAkB;AACxB,iBAAIA,aAAUyH,QAAd,EAAwB;AAC1B;AACA;AACA;AACExH,uBAAOwH,QAAP;AACA,iBAAMS,IAAElI,oCAAR;AACAA,wBAAQyH,QAAR,CAAiB,OAAOS,CAAP;AAClB,UAZE;AAaHjI,iBAAO,kBAAkB;AACvB,iBAAIA,YAASwH,QAAb,EAAuB;AACzB;AACA;AACA;AACEzH,wBAAQyH,QAAR;AACA,iBAAMS,IAAEjI,mCAAR;AACAA,uBAAOwH,QAAP;AACA,oBAAOS,CAAP;AACD;AAtBE,MAAP;AAwBH;;AAED,UAASC,cAAT,CAAwBC,GAAxB,EAA4BC,IAA5B,EAAkC;AAC9B,SAAMC,SAAOD,SAAO,OAAP,GAAe,EAAf,GAAkB,GAA/B;AACA,YAAOzE,OAAOC,IAAP,CAAYuE,GAAZ,EACFpF,GADE,CACE;AAAA,gBAAGoF,IAAIrE,CAAJ,SAAUuE,MAAV,GAAmBvE,CAAnB,SAAwBqE,IAAIrE,CAAJ,CAAxB,QAAoCuE,MAApC,GAA6CvE,CAAhD;AAAA,MADF,CAAP;AAEH;;AAED,UAAS5B,YAAT,CAAsB+F,CAAtB,EAAyB;AACrB,SAAIA,EAAEG,IAAN,EAAY;AACR,aAAG9B,MAAMC,OAAN,CAAc0B,EAAEzG,IAAhB,CAAH,EAA0B,OAAOU,aAAa+F,EAAEzG,IAAf,CAAP;AAC1B,gBAAO,EAAP;AACH;AACD,SAAIyG,EAAE7E,MAAF,IAAUkD,MAAMC,OAAN,CAAc0B,EAAE,CAAF,CAAd,CAAd,EAAmC,OAAOA,EAAElF,GAAF,CAAMb,YAAN,CAAP;AACnC,SAAI,CAACoE,MAAMC,OAAN,CAAc0B,CAAd,CAAL,EAAuB,OAAO,EAAP;AACvB,YAAOA,EAAEK,MAAF,CAAS,UAACC,CAAD,EAAGC,CAAH,EAAO;AAACD,WAAEC,EAAEC,KAAJ,IAAWD,EAAEE,KAAb,CAAmB,OAAOH,CAAP;AAAS,MAA7C,EAA8C,EAA9C,CAAP;AACH;SACOpB,O,GAAAA,O;SAASH,Y,GAAAA,Y;SAAcJ,Y,GAAAA,Y;SAAcsB,c,GAAAA,c;SAAgBhG,Y,GAAAA,Y;SAAaC,mB,GAAAA,mB;;;;;;;;;;;;;;;;;ACrM1E,KAAMuE,sBAAmB,EAAnB,CAAN;;AAEA,KAAMrI,QAAQ;AACVC,WAAK,CADK;AAEV0G,YAAM,CAFI;AAGVyB,WAAK,CAHK;AAIVzH,WAAK,CAJK;AAKVX,YAAM,CALI;AAMVe,YAAM;AANI,EAAd;;AASA,KAAMuJ,mBAAmB;AACrBnK,mBAAa,cADQ,CACO;AADP,OAErBwG,OAAM,OAFe,CAEP;AAFO,OAGrBI,YAAW,YAHU,CAGK;AAHL,OAIrBL,WAAU,WAJW,CAII;AAJJ,OAKrB6D,SAAQ,SALa,CAKE;AALF,OAMrBC,SAAQ,SANa;AAOrBC,aAAO;AAPc,EAAzB;;AAUA,KAAMvK,aAAa;AACfC,mBAAa,CADE;AAEf4G,iBAAW,CAFI;AAGfL,gBAAU,CAHK;AAIf6D,cAAQ,CAJO;AAKfC,cAAQ,CALO;AAMfC,aAAO,EANQ;AAOf9D,YAAO;AAPQ,EAAnB;;AAUA,KAAMhD,UAAU;AACZ1D,WAAK,CADO;AAEZyK,WAAO,CAFK;AAGZD,aAAS,CAHG;AAIZD,cAAU,CAJE;AAKZG,cAAU,CALE;AAMZC,WAAK;AANO,EAAhB;AAQA,KAAMhH,QAAQ;AACViH,WAAM,MADI;AAEVC,eAAU,UAFA;AAGVF,WAAM,MAHI;AAIVG,eAAU,UAJA;AAKVC,YAAO,OALG;AAMVC,gBAAW,WAND;AAOVC,UAAK,KAPK;AAQVC,mBAAc,cARJ;AASVC,eAAU,UATA;AAUVC,SAAI,IAVM;AAWVC,WAAM,MAXI,CAWI;AAXJ,EAAd;;SAcQjD,W,GAAAA,W;SAAarI,K,GAAAA,K;SAAOE,U,GAAAA,U;SAAYyD,O,GAAAA,O;SAASC,K,GAAAA,K;SAAO0G,gB,GAAAA,gB;;;;;;;;;ACvDxD;;;;;;AAMA;;AAEA,UAASiB,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,YAASC,IAAT,GAAgB;AAAE,UAAKC,WAAL,GAAmBH,KAAnB;AAA2B;AAC7CE,QAAKE,SAAL,GAAiBH,OAAOG,SAAxB;AACAJ,SAAMI,SAAN,GAAkB,IAAIF,IAAJ,EAAlB;AACD;;AAED,UAASG,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmDC,QAAnD,EAA6D;AAC3D,QAAKH,OAAL,GAAgBA,OAAhB;AACA,QAAKC,QAAL,GAAgBA,QAAhB;AACA,QAAKC,KAAL,GAAgBA,KAAhB;AACA,QAAKC,QAAL,GAAgBA,QAAhB;AACA,QAAKC,IAAL,GAAgB,aAAhB;;AAEA,OAAI,OAAOzC,MAAM0C,iBAAb,KAAmC,UAAvC,EAAmD;AACjD1C,WAAM0C,iBAAN,CAAwB,IAAxB,EAA8BN,eAA9B;AACD;AACF;;AAEDN,cAAaM,eAAb,EAA8BpC,KAA9B;;AAEAoC,iBAAgBO,YAAhB,GAA+B,UAASL,QAAT,EAAmBC,KAAnB,EAA0B;AACvD,OAAIK,2BAA2B;AACzBC,cAAS,iBAASC,WAAT,EAAsB;AAC7B,cAAO,OAAOC,cAAcD,YAAYE,IAA1B,CAAP,GAAyC,IAAhD;AACD,MAHwB;;AAKzB,cAAS,gBAASF,WAAT,EAAsB;AAC7B,WAAIG,eAAe,EAAnB;AAAA,WACI3G,CADJ;;AAGA,YAAKA,IAAI,CAAT,EAAYA,IAAIwG,YAAYI,KAAZ,CAAkB5H,MAAlC,EAA0CgB,GAA1C,EAA+C;AAC7C2G,yBAAgBH,YAAYI,KAAZ,CAAkB5G,CAAlB,aAAgCkC,KAAhC,GACZ2E,YAAYL,YAAYI,KAAZ,CAAkB5G,CAAlB,EAAqB,CAArB,CAAZ,IAAuC,GAAvC,GAA6C6G,YAAYL,YAAYI,KAAZ,CAAkB5G,CAAlB,EAAqB,CAArB,CAAZ,CADjC,GAEZ6G,YAAYL,YAAYI,KAAZ,CAAkB5G,CAAlB,CAAZ,CAFJ;AAGD;;AAED,cAAO,OAAOwG,YAAYM,QAAZ,GAAuB,GAAvB,GAA6B,EAApC,IAA0CH,YAA1C,GAAyD,GAAhE;AACD,MAhBwB;;AAkBzBI,UAAK,aAASP,WAAT,EAAsB;AACzB,cAAO,eAAP;AACD,MApBwB;;AAsBzBtG,UAAK,aAASsG,WAAT,EAAsB;AACzB,cAAO,cAAP;AACD,MAxBwB;;AA0BzBQ,YAAO,eAASR,WAAT,EAAsB;AAC3B,cAAOA,YAAYS,WAAnB;AACD;AA5BwB,IAA/B;;AA+BA,YAASjE,GAAT,CAAakE,EAAb,EAAiB;AACf,YAAOA,GAAGC,UAAH,CAAc,CAAd,EAAiB9G,QAAjB,CAA0B,EAA1B,EAA8B+G,WAA9B,EAAP;AACD;;AAED,YAASX,aAAT,CAAuBxH,CAAvB,EAA0B;AACxB,YAAOA,EACJoI,OADI,CACI,KADJ,EACW,MADX,EAEJA,OAFI,CAEI,IAFJ,EAEW,KAFX,EAGJA,OAHI,CAGI,KAHJ,EAGW,KAHX,EAIJA,OAJI,CAII,KAJJ,EAIW,KAJX,EAKJA,OALI,CAKI,KALJ,EAKW,KALX,EAMJA,OANI,CAMI,KANJ,EAMW,KANX,EAOJA,OAPI,CAOI,cAPJ,EAO6B,UAASH,EAAT,EAAa;AAAE,cAAO,SAASlE,IAAIkE,EAAJ,CAAhB;AAA0B,MAPtE,EAQJG,OARI,CAQI,uBARJ,EAQ6B,UAASH,EAAT,EAAa;AAAE,cAAO,QAASlE,IAAIkE,EAAJ,CAAhB;AAA0B,MARtE,CAAP;AASD;;AAED,YAASL,WAAT,CAAqB5H,CAArB,EAAwB;AACtB,YAAOA,EACJoI,OADI,CACI,KADJ,EACW,MADX,EAEJA,OAFI,CAEI,KAFJ,EAEW,KAFX,EAGJA,OAHI,CAGI,KAHJ,EAGW,KAHX,EAIJA,OAJI,CAII,IAJJ,EAIW,KAJX,EAKJA,OALI,CAKI,KALJ,EAKW,KALX,EAMJA,OANI,CAMI,KANJ,EAMW,KANX,EAOJA,OAPI,CAOI,KAPJ,EAOW,KAPX,EAQJA,OARI,CAQI,KARJ,EAQW,KARX,EASJA,OATI,CASI,cATJ,EAS6B,UAASH,EAAT,EAAa;AAAE,cAAO,SAASlE,IAAIkE,EAAJ,CAAhB;AAA0B,MATtE,EAUJG,OAVI,CAUI,uBAVJ,EAU6B,UAASH,EAAT,EAAa;AAAE,cAAO,QAASlE,IAAIkE,EAAJ,CAAhB;AAA0B,MAVtE,CAAP;AAWD;;AAED,YAASI,mBAAT,CAA6Bd,WAA7B,EAA0C;AACxC,YAAOF,yBAAyBE,YAAYxC,IAArC,EAA2CwC,WAA3C,CAAP;AACD;;AAED,YAASe,gBAAT,CAA0BvB,QAA1B,EAAoC;AAClC,SAAIwB,eAAe,IAAItF,KAAJ,CAAU8D,SAAShH,MAAnB,CAAnB;AAAA,SACIgB,CADJ;AAAA,SACOkD,CADP;;AAGA,UAAKlD,IAAI,CAAT,EAAYA,IAAIgG,SAAShH,MAAzB,EAAiCgB,GAAjC,EAAsC;AACpCwH,oBAAaxH,CAAb,IAAkBsH,oBAAoBtB,SAAShG,CAAT,CAApB,CAAlB;AACD;;AAEDwH,kBAAaC,IAAb;;AAEA,SAAID,aAAaxI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,YAAKgB,IAAI,CAAJ,EAAOkD,IAAI,CAAhB,EAAmBlD,IAAIwH,aAAaxI,MAApC,EAA4CgB,GAA5C,EAAiD;AAC/C,aAAIwH,aAAaxH,IAAI,CAAjB,MAAwBwH,aAAaxH,CAAb,CAA5B,EAA6C;AAC3CwH,wBAAatE,CAAb,IAAkBsE,aAAaxH,CAAb,CAAlB;AACAkD;AACD;AACF;AACDsE,oBAAaxI,MAAb,GAAsBkE,CAAtB;AACD;;AAED,aAAQsE,aAAaxI,MAArB;AACE,YAAK,CAAL;AACE,gBAAOwI,aAAa,CAAb,CAAP;;AAEF,YAAK,CAAL;AACE,gBAAOA,aAAa,CAAb,IAAkB,MAAlB,GAA2BA,aAAa,CAAb,CAAlC;;AAEF;AACE,gBAAOA,aAAajH,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,EAA0BxB,IAA1B,CAA+B,IAA/B,IACH,OADG,GAEHyI,aAAaA,aAAaxI,MAAb,GAAsB,CAAnC,CAFJ;AARJ;AAYD;;AAED,YAAS0I,aAAT,CAAuBzB,KAAvB,EAA8B;AAC5B,YAAOA,QAAQ,OAAOQ,cAAcR,KAAd,CAAP,GAA8B,IAAtC,GAA6C,cAApD;AACD;;AAED,UAAO,cAAcsB,iBAAiBvB,QAAjB,CAAd,GAA2C,OAA3C,GAAqD0B,cAAczB,KAAd,CAArD,GAA4E,SAAnF;AACD,EAzGD;;AA2GA,UAAS0B,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AACjCA,aAAUA,YAAY,KAAK,CAAjB,GAAqBA,OAArB,GAA+B,EAAzC;;AAEA,OAAIC,aAAa,EAAjB;AAAA,OAEIC,yBAAyB,EAAEC,OAAOC,cAAT,EAF7B;AAAA,OAGIC,wBAAyBD,cAH7B;AAAA,OAKIE,SAAS,SAATA,MAAS,CAAShE,CAAT,EAAY;AAAE,YAAOA,CAAP;AAAU,IALrC;AAAA,OAMIiE,SAAS,SAATA,MAAS,CAASC,GAAT,EAAcjL,IAAd,EAAoB;AAAE,YAAO,EAAC4G,MAAM,MAAP,EAAe5G,MAAKA,IAApB,EAA0BiL,KAAIA,GAA9B,EAAP;AAA2C,IAN9E;AAAA,OAOIC,SAAS,SAATA,MAAS,CAASD,GAAT,EAAc;AAAE,YAAO,EAACrE,MAAM,IAAP,EAAaqE,KAAIA,GAAjB,EAAP;AAA8B,IAP3D;AAAA,OAQIE,SAAS,SAATA,MAAS,CAASnL,IAAT,EAAeiL,GAAf,EAAoB;AAAE,YAAO,EAACrE,MAAM,MAAP,EAAe5G,MAAKA,IAApB,EAA0BiL,KAAIA,GAA9B,EAAP;AAA2C,IAR9E;AAAA,OASIG,SAAS,SAATA,MAAS,CAASpL,IAAT,EAAe;AAAE,YAAO,EAAC4G,MAAM,MAAP,EAAe5G,MAAKA,IAApB,EAAP;AAAkC,IAThE;AAAA,OAUIqL,SAAS,SAATA,MAAS,CAASC,EAAT,EAAa;AAAE,YAAO,EAAC1E,MAAM,IAAP,EAAP;AAAqB,IAVjD;AAAA,OAWI2E,SAAS,SAATA,MAAS,CAAS1K,CAAT,EAAY;AAAC,YAAOA,CAAP;AAAS,IAXnC;AAAA,OAYI2K,SAAS,KAZb;AAAA,OAaIC,SAASC,uBAAuB,KAAvB,EAA8B,KAA9B,CAbb;AAAA,OAcIC,SAAS,SAATA,MAAS,GAAW;AAAE,YAAO,EAAP;AAAU,IAdpC;AAAA,OAeIC,UAAU,SAAVA,OAAU,CAASC,EAAT,EAAa3E,KAAb,EAAoB;AAAE,YAAO,EAACD,OAAM4E,EAAP,EAAW3E,OAAMA,KAAjB,EAAP;AAA+B,IAfnE;AAAA,OAgBI4E,UAAU,GAhBd;AAAA,OAiBIC,UAAUL,uBAAuB,GAAvB,EAA4B,KAA5B,CAjBd;AAAA,OAkBIM,UAAU,iBAlBd;AAAA,OAmBIC,UAAUC,qBAAqB,CAAC,GAAD,EAAM,CAAC,GAAD,EAAM,GAAN,CAAN,EAAkB,CAAC,GAAD,EAAM,GAAN,CAAlB,EAA8B,GAA9B,EAAmC,CAAC,GAAD,EAAM,GAAN,CAAnC,CAArB,EAAqE,KAArE,EAA4E,KAA5E,CAnBd;AAAA,OAoBIC,UAAU,SAAVA,OAAU,CAASN,EAAT,EAAa;AAAC,YAAOA,GAAGlK,IAAH,CAAQ,EAAR,CAAP;AAAmB,IApB/C;AAAA,OAqBIyK,UAAU,YArBd;AAAA,OAsBIC,UAAUH,qBAAqB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAArB,EAAyC,IAAzC,EAA+C,KAA/C,CAtBd;AAAA,OAuBII,UAAU,SAAVA,OAAU,CAASC,CAAT,EAAY;AAAC,YAAOA,EAAE5K,IAAF,CAAO,EAAP,CAAP;AAAkB,IAvB7C;AAAA,OAwBI6K,UAAU,WAxBd;AAAA,OAyBIC,UAAUP,qBAAqB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAArB,EAAyC,KAAzC,EAAgD,KAAhD,CAzBd;AAAA,OA0BIQ,UAAU,SAAVA,OAAU,CAASH,CAAT,EAAY;AAAC,YAAO,EAAP;AAAU,IA1BrC;AAAA,OA2BII,UAAU,SAAVA,OAAU,CAAS3F,CAAT,EAAY;AAAC,YAAO,EAACJ,MAAM,OAAP,EAAgB5G,MAAKgH,CAArB,EAAP;AAAiC,IA3B5D;AAAA,OA4BI4F,UAAU,SAAVA,OAAU,CAASC,CAAT,EAAY;AAAC,YAAOA,CAAP;AAAS,IA5BpC;AAAA,OA6BIC,UAAU,OA7Bd;AAAA,OA8BIC,UAAUrB,uBAAuB,OAAvB,EAAgC,KAAhC,CA9Bd;AAAA,OA+BIsB,UAAU,OA/Bd;AAAA,OAgCIC,UAAUvB,uBAAuB,OAAvB,EAAgC,KAAhC,CAhCd;AAAA,OAiCIwB,UAAUC,oBAjCd;AAAA,OAkCIC,UAAU,SAAVA,OAAU,CAASC,GAAT,EAAc;AAAC,YAAO,EAACzG,MAAM,UAAP,EAAmB5G,MAAKqN,IAAI1L,IAAJ,CAAS,EAAT,CAAxB,EAAP;AAA6C,IAlC1E;AAAA,OAmCI2L,UAAU,SAAVA,OAAU,CAASrC,GAAT,EAAcoC,GAAd,EAAmB;AAAC,YAAO,EAACzG,MAAM,UAAP,EAAmBqE,KAAIA,GAAvB,EAA4BjL,MAAKqN,IAAI1L,IAAJ,CAAS,EAAT,CAAjC,EAAP;AAAsD,IAnCxF;AAAA,OAoCI4L,UAAU,SAAVA,OAAU,CAAStC,GAAT,EAAc;AAAC,YAAO,EAACrE,MAAM,UAAP,EAAmBqE,KAAIA,GAAvB,EAAP;AAAmC,IApChE;AAAA,OAqCIuC,UAAU,SAAVA,OAAU,GAAW;AAAC,YAAO,EAAC5G,MAAM,MAAP,EAAP;AAAuB,IArCjD;AAAA,OAsCI6G,UAAU,SAAVA,OAAU,CAASxC,GAAT,EAAc;AAAC,YAAO,EAACrE,MAAM,KAAP,EAAcqE,KAAIA,GAAlB,EAAP;AAA+B,IAtC5D;AAAA,OAuCIyC,UAAU,OAvCd;AAAA,OAwCIC,UAAUjC,uBAAuB,OAAvB,EAAgC,KAAhC,CAxCd;AAAA,OAyCIkC,UAAU,iBAzCd;AAAA,OA0CIC,UAAU3B,qBAAqB,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,CAAC,GAAD,EAAM,GAAN,CAAnC,CAArB,EAAqE,KAArE,EAA4E,KAA5E,CA1Cd;AAAA,OA2CI4B,UAAU,QA3Cd;AAAA,OA4CIC,UAAU7B,qBAAqB,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAArB,EAAmC,KAAnC,EAA0C,KAA1C,CA5Cd;AAAA,OA6CI8B,UAAU,SAAVA,OAAU,CAASnC,EAAT,EAAaoC,KAAb,EAAoB;AAAC,YAAOpC,GAAGlK,IAAH,CAAQ,EAAR,IAAY,GAAZ,GAAgBsM,MAAMtM,IAAN,CAAW,EAAX,CAAvB;AAAsC,IA7CzE;AAAA,OA8CIuM,UAAU,OA9Cd;AAAA,OA+CIC,UAAUzC,uBAAuB,OAAvB,EAAgC,KAAhC,CA/Cd;AAAA,OAgDI0C,UAAU,SAAVA,OAAU,CAASnD,GAAT,EAAc3J,CAAd,EAAiB;AAAE,YAAO,EAACsF,MAAK,MAAN,EAAcqE,KAAIA,GAAlB,EAAuBjL,MAAKsB,CAA5B,EAAP;AAAuC,IAhDxE;AAAA,OAiDI+M,UAAU,SAAVA,OAAU,CAAS/M,CAAT,EAAY;AAAE,YAAO,EAACsF,MAAK,MAAN,EAAc5G,MAAKsB,CAAnB,EAAP;AAA8B,IAjD1D;AAAA,OAkDIgN,UAAU,QAlDd;AAAA,OAmDIC,UAAU7C,uBAAuB,QAAvB,EAAiC,KAAjC,CAnDd;AAAA,OAoDI8C,UAAU,SAAVA,OAAU,CAASjC,CAAT,EAAY;AAAC,YAAOA,CAAP;AAAS,IApDpC;AAAA,OAqDIkC,UAAU,mBArDd;AAAA,OAsDIC,UAAUxC,qBAAqB,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAArB,EAAyE,KAAzE,EAAgF,KAAhF,CAtDd;AAAA,OAuDIyC,UAAU,SAAVA,OAAU,GAAW;AAAC,YAAO,EAAP;AAAU,IAvDpC;AAAA,OAwDIC,UAAU,oBAxDd;AAAA,OAyDIC,UAAU3C,qBAAqB,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,CAArB,EAAyE,IAAzE,EAA+E,KAA/E,CAzDd;AAAA,OA0DI4C,UAAU,UA1Dd;AAAA,OA2DIC,UAAU7C,qBAAqB,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAArB,EAA4C,KAA5C,EAAmD,KAAnD,CA3Dd;AAAA,OA4DI8C,UAAU,MA5Dd;AAAA,OA6DIC,UAAU/C,qBAAqB,CAAC,GAAD,CAArB,EAA4B,KAA5B,EAAmC,KAAnC,CA7Dd;AAAA,OA+DIgD,cAAuB,CA/D3B;AAAA,OAgEIC,eAAuB,CAhE3B;AAAA,OAiEIC,sBAAuB,CAAC,EAAEzL,MAAM,CAAR,EAAW0L,QAAQ,CAAnB,EAAD,CAjE3B;AAAA,OAkEIC,iBAAuB,CAlE3B;AAAA,OAmEIC,sBAAuB,EAnE3B;AAAA,OAoEIC,kBAAuB,CApE3B;AAAA,OAsEIC,UAtEJ;;AAwEA,OAAI,eAAehF,OAAnB,EAA4B;AAC1B,SAAI,EAAEA,QAAQiF,SAAR,IAAqB/E,sBAAvB,CAAJ,EAAoD;AAClD,aAAM,IAAIrE,KAAJ,CAAU,qCAAqCmE,QAAQiF,SAA7C,GAAyD,KAAnE,CAAN;AACD;;AAED5E,6BAAwBH,uBAAuBF,QAAQiF,SAA/B,CAAxB;AACD;;AAED,YAASpG,IAAT,GAAgB;AACd,YAAOkB,MAAMmF,SAAN,CAAgBR,YAAhB,EAA8BD,WAA9B,CAAP;AACD;;AAED,YAASpG,QAAT,GAAoB;AAClB,YAAO8G,oBAAoBT,YAApB,EAAkCD,WAAlC,CAAP;AACD;;AAED,YAAStG,QAAT,CAAkBiB,WAAlB,EAA+Bf,QAA/B,EAAyC;AACvCA,gBAAWA,aAAa,KAAK,CAAlB,GAAsBA,QAAtB,GAAiC8G,oBAAoBT,YAApB,EAAkCD,WAAlC,CAA5C;;AAEA,WAAMW,yBACJ,CAACC,qBAAqBjG,WAArB,CAAD,CADI,EAEJW,MAAMmF,SAAN,CAAgBR,YAAhB,EAA8BD,WAA9B,CAFI,EAGJpG,QAHI,CAAN;AAKD;;AAED,YAAS9G,KAAT,CAAe2G,OAAf,EAAwBG,QAAxB,EAAkC;AAChCA,gBAAWA,aAAa,KAAK,CAAlB,GAAsBA,QAAtB,GAAiC8G,oBAAoBT,YAApB,EAAkCD,WAAlC,CAA5C;;AAEA,WAAMa,qBAAqBpH,OAArB,EAA8BG,QAA9B,CAAN;AACD;;AAED,YAAS4C,sBAAT,CAAgCpC,IAAhC,EAAsC0G,UAAtC,EAAkD;AAChD,YAAO,EAAEpJ,MAAM,SAAR,EAAmB0C,MAAMA,IAAzB,EAA+B0G,YAAYA,UAA3C,EAAP;AACD;;AAED,YAAS9D,oBAAT,CAA8B1C,KAA9B,EAAqCE,QAArC,EAA+CsG,UAA/C,EAA2D;AACzD,YAAO,EAAEpJ,MAAM,OAAR,EAAiB4C,OAAOA,KAAxB,EAA+BE,UAAUA,QAAzC,EAAmDsG,YAAYA,UAA/D,EAAP;AACD;;AAED,YAAS7C,kBAAT,GAA8B;AAC5B,YAAO,EAAEvG,MAAM,KAAR,EAAP;AACD;;AAED,YAASqJ,kBAAT,GAA8B;AAC5B,YAAO,EAAErJ,MAAM,KAAR,EAAP;AACD;;AAED,YAASkJ,oBAAT,CAA8BjG,WAA9B,EAA2C;AACzC,YAAO,EAAEjD,MAAM,OAAR,EAAiBiD,aAAaA,WAA9B,EAAP;AACD;;AAED,YAASqG,qBAAT,CAA+BC,GAA/B,EAAoC;AAClC,SAAIC,UAAUhB,oBAAoBe,GAApB,CAAd;AAAA,SAAwCpJ,CAAxC;;AAEA,SAAIqJ,OAAJ,EAAa;AACX,cAAOA,OAAP;AACD,MAFD,MAEO;AACLrJ,WAAIoJ,MAAM,CAAV;AACA,cAAO,CAACf,oBAAoBrI,CAApB,CAAR,EAAgC;AAC9BA;AACD;;AAEDqJ,iBAAUhB,oBAAoBrI,CAApB,CAAV;AACAqJ,iBAAU;AACRzM,eAAQyM,QAAQzM,IADR;AAER0L,iBAAQe,QAAQf;AAFR,QAAV;;AAKA,cAAOtI,IAAIoJ,GAAX,EAAgB;AACd,aAAI3F,MAAMT,UAAN,CAAiBhD,CAAjB,MAAwB,EAA5B,EAAgC;AAC9BqJ,mBAAQzM,IAAR;AACAyM,mBAAQf,MAAR,GAAiB,CAAjB;AACD,UAHD,MAGO;AACLe,mBAAQf,MAAR;AACD;;AAEDtI;AACD;;AAEDqI,2BAAoBe,GAApB,IAA2BC,OAA3B;AACA,cAAOA,OAAP;AACD;AACF;;AAED,YAASR,mBAAT,CAA6BS,QAA7B,EAAuCC,MAAvC,EAA+C;AAC7C,SAAIC,kBAAkBL,sBAAsBG,QAAtB,CAAtB;AAAA,SACIG,gBAAkBN,sBAAsBI,MAAtB,CADtB;;AAGA,YAAO;AACL1F,cAAO;AACLtF,iBAAQ+K,QADH;AAEL1M,eAAQ4M,gBAAgB5M,IAFnB;AAGL0L,iBAAQkB,gBAAgBlB;AAHnB,QADF;AAMLvM,YAAK;AACHwC,iBAAQgL,MADL;AAEH3M,eAAQ6M,cAAc7M,IAFnB;AAGH0L,iBAAQmB,cAAcnB;AAHnB;AANA,MAAP;AAYD;;AAED,YAASoB,QAAT,CAAkB7H,QAAlB,EAA4B;AAC1B,SAAIsG,cAAcI,cAAlB,EAAkC;AAAE;AAAS;;AAE7C,SAAIJ,cAAcI,cAAlB,EAAkC;AAChCA,wBAAiBJ,WAAjB;AACAK,6BAAsB,EAAtB;AACD;;AAEDA,yBAAoB7J,IAApB,CAAyBkD,QAAzB;AACD;;AAED,YAASmH,oBAAT,CAA8BpH,OAA9B,EAAuCG,QAAvC,EAAiD;AAC/C,YAAO,IAAIJ,eAAJ,CAAoBC,OAApB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyCG,QAAzC,CAAP;AACD;;AAED,YAAS+G,wBAAT,CAAkCjH,QAAlC,EAA4CC,KAA5C,EAAmDC,QAAnD,EAA6D;AAC3D,YAAO,IAAIJ,eAAJ,CACLA,gBAAgBO,YAAhB,CAA6BL,QAA7B,EAAuCC,KAAvC,CADK,EAELD,QAFK,EAGLC,KAHK,EAILC,QAJK,CAAP;AAMD;;AAED,YAAS+B,cAAT,GAA0B;AACxB,SAAI6F,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AAEAH,UAAKxB,WAAL;AACAyB,UAAKG,YAAL;AACA,SAAIH,OAAOjG,UAAX,EAAuB;AACrBkG,YAAK,EAAL;AACAC,YAAKE,iBAAL;AACA,WAAIF,OAAOnG,UAAX,EAAuB;AACrB,gBAAOmG,OAAOnG,UAAd,EAA0B;AACxBkG,cAAGlL,IAAH,CAAQmL,EAAR;AACAA,gBAAKE,iBAAL;AACD;AACF,QALD,MAKO;AACLH,cAAKlG,UAAL;AACD;AACD,WAAIkG,OAAOlG,UAAX,EAAuB;AACrByE,wBAAeuB,EAAf;AACAC,cAAK5F,OAAO6F,EAAP,CAAL;AACAF,cAAKC,EAAL;AACD,QAJD,MAIO;AACLzB,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MAnBD,MAmBO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;AACD,SAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKM,eAAL;AACD;;AAED,YAAON,EAAP;AACD;;AAED,YAASK,eAAT,GAA2B;AACzB,SAAIL,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBI,EAApB,EAAwBC,EAAxB;;AAEAR,UAAKxB,WAAL;AACAyB,UAAKQ,aAAL;AACA,SAAIR,OAAOjG,UAAX,EAAuB;AACrBkG,YAAKE,YAAL;AACA,WAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,cAAKO,cAAL;AACA,aAAIP,OAAOnG,UAAX,EAAuB;AACrBuG,gBAAK,EAAL;AACAC,gBAAKG,eAAL;AACA,eAAIH,OAAOxG,UAAX,EAAuB;AACrB,oBAAOwG,OAAOxG,UAAd,EAA0B;AACxBuG,kBAAGvL,IAAH,CAAQwL,EAAR;AACAA,oBAAKG,eAAL;AACD;AACF,YALD,MAKO;AACLJ,kBAAKvG,UAAL;AACD;AACD,eAAIuG,OAAOvG,UAAX,EAAuB;AACrByE,4BAAeuB,EAAf;AACAC,kBAAK3F,OAAO6F,EAAP,EAAWI,EAAX,CAAL;AACAP,kBAAKC,EAAL;AACD,YAJD,MAIO;AACLzB,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAnBD,MAmBO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAzBD,MAyBO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MA/BD,MA+BO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;AACD,SAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKxB,WAAL;AACAyB,YAAKQ,aAAL;AACA,WAAIR,OAAOjG,UAAX,EAAuB;AACrBkG,cAAKE,YAAL;AACA,aAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,gBAAKO,cAAL;AACA,eAAIP,OAAOnG,UAAX,EAAuB;AACrByE,4BAAeuB,EAAf;AACAC,kBAAKzF,OAAO2F,EAAP,CAAL;AACAH,kBAAKC,EAAL;AACD,YAJD,MAIO;AACLzB,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAVD,MAUO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAhBD,MAgBO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACD,WAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,cAAKxB,WAAL;AACAyB,cAAKQ,aAAL;AACA,aAAIR,OAAOjG,UAAX,EAAuB;AACrBkG,gBAAKE,YAAL;AACA,eAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,kBAAK,EAAL;AACAI,kBAAKI,eAAL;AACA,iBAAIJ,OAAOvG,UAAX,EAAuB;AACrB,sBAAOuG,OAAOvG,UAAd,EAA0B;AACxBmG,oBAAGnL,IAAH,CAAQuL,EAAR;AACAA,sBAAKI,eAAL;AACD;AACF,cALD,MAKO;AACLR,oBAAKnG,UAAL;AACD;AACD,iBAAImG,OAAOnG,UAAX,EAAuB;AACrBuG,oBAAKG,cAAL;AACA,mBAAIH,OAAOvG,UAAX,EAAuB;AACrByE,gCAAeuB,EAAf;AACAC,sBAAKxF,OAAO0F,EAAP,EAAWI,EAAX,CAAL;AACAP,sBAAKC,EAAL;AACD,gBAJD,MAIO;AACLzB,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cAVD,MAUO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YAzBD,MAyBO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UA/BD,MA+BO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACD,aAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,gBAAKxB,WAAL;AACAyB,gBAAKQ,aAAL;AACA,eAAIR,OAAOjG,UAAX,EAAuB;AACrBkG,kBAAKE,YAAL;AACA,iBAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,oBAAK,EAAL;AACAI,oBAAKI,eAAL;AACA,mBAAIJ,OAAOvG,UAAX,EAAuB;AACrB,wBAAOuG,OAAOvG,UAAd,EAA0B;AACxBmG,sBAAGnL,IAAH,CAAQuL,EAAR;AACAA,wBAAKI,eAAL;AACD;AACF,gBALD,MAKO;AACLR,sBAAKnG,UAAL;AACD;AACD,mBAAImG,OAAOnG,UAAX,EAAuB;AACrByE,gCAAeuB,EAAf;AACAC,sBAAKvF,OAAOyF,EAAP,CAAL;AACAH,sBAAKC,EAAL;AACD,gBAJD,MAIO;AACLzB,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cAnBD,MAmBO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YAzBD,MAyBO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACD,eAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,kBAAKxB,WAAL;AACAyB,kBAAKQ,aAAL;AACA,iBAAIR,OAAOjG,UAAX,EAAuB;AACrBkG,oBAAKE,YAAL;AACA,mBAAIF,OAAOlG,UAAX,EAAuB;AACrByE,gCAAeuB,EAAf;AACAC,sBAAKtF,OAAOsF,EAAP,CAAL;AACAD,sBAAKC,EAAL;AACD,gBAJD,MAIO;AACLzB,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cAVD,MAUO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACD,iBAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,oBAAKxB,WAAL;AACAyB,oBAAKW,cAAL;AACA,mBAAIX,OAAOjG,UAAX,EAAuB;AACrBkG,sBAAKE,YAAL;AACA,qBAAIF,OAAOlG,UAAX,EAAuB;AACrByE,kCAAeuB,EAAf;AACAC,wBAAKpF,OAAOoF,EAAP,CAAL;AACAD,wBAAKC,EAAL;AACD,kBAJD,MAIO;AACLzB,iCAAcwB,EAAd;AACAA,wBAAKhG,UAAL;AACD;AACF,gBAVD,MAUO;AACLwE,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF;AACF;AACF;AACF;AACF;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASS,WAAT,GAAuB;AACrB,SAAIT,EAAJ,EAAQC,EAAR;;AAEAD,UAAKxB,WAAL;AACA,SAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiC1D,MAArC,EAA6C;AAC3CmF,YAAKnF,MAAL;AACA0D,sBAAe,CAAf;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAShF,MAAT;AAAmB;AACjD;AACD,SAAIkF,OAAOjG,UAAX,EAAuB;AACrByE,sBAAeuB,EAAf;AACAC,YAAKhF,QAAL;AACD;AACD+E,UAAKC,EAAL;;AAEA,YAAOD,EAAP;AACD;;AAED,YAASW,aAAT,GAAyB;AACvB,SAAIX,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AAEAH,UAAKxB,WAAL;AACAyB,UAAKa,qBAAL;AACA,SAAIb,OAAOjG,UAAX,EAAuB;AACrBkG,YAAKa,gBAAL;AACA,WAAIb,OAAOlG,UAAX,EAAuB;AACrBmG,cAAKC,YAAL;AACA,aAAID,OAAOnG,UAAX,EAAuB;AACrByE,0BAAeuB,EAAf;AACAC,gBAAK/E,QAAQ+E,EAAR,EAAYC,EAAZ,CAAL;AACAF,gBAAKC,EAAL;AACD,UAJD,MAIO;AACLzB,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAVD,MAUO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MAhBD,MAgBO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASc,mBAAT,GAA+B;AAC7B,SAAId,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AAEAH,UAAKxB,WAAL;AACA,SAAI1E,MAAMT,UAAN,CAAiBmF,WAAjB,MAAkC,EAAtC,EAA0C;AACxCyB,YAAK7E,OAAL;AACAoD;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAS1E,OAAT;AAAoB;AAClD;AACD,SAAI4E,OAAOjG,UAAX,EAAuB;AACrBkG,YAAK,EAAL;AACA,WAAI5E,QAAQ0F,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,cAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,QAHD,MAGO;AACL2B,cAAKnG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAASxE,OAAT;AAAoB;AAClD;AACD,WAAI4E,OAAOnG,UAAX,EAAuB;AACrB,gBAAOmG,OAAOnG,UAAd,EAA0B;AACxBkG,cAAGlL,IAAH,CAAQmL,EAAR;AACA,eAAI7E,QAAQ0F,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,kBAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,YAHD,MAGO;AACL2B,kBAAKnG,UAAL;AACA,iBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,wBAASxE,OAAT;AAAoB;AAClD;AACF;AACF,QAXD,MAWO;AACL2E,cAAKlG,UAAL;AACD;AACD,WAAIkG,OAAOlG,UAAX,EAAuB;AACrB,aAAIF,MAAMT,UAAN,CAAiBmF,WAAjB,MAAkC,EAAtC,EAA0C;AACxC2B,gBAAK/E,OAAL;AACAoD;AACD,UAHD,MAGO;AACL2B,gBAAKnG,UAAL;AACA,eAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sBAAS1E,OAAT;AAAoB;AAClD;AACD,aAAI8E,OAAOnG,UAAX,EAAuB;AACrByE,0BAAeuB,EAAf;AACAC,gBAAKxE,QAAQyE,EAAR,CAAL;AACAF,gBAAKC,EAAL;AACD,UAJD,MAIO;AACLzB,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAhBD,MAgBO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MA3CD,MA2CO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASe,cAAT,GAA0B;AACxB,SAAIf,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AAEAF,UAAKxB,WAAL;AACAyB,UAAK,EAAL;AACA,SAAIvE,QAAQsF,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C0B,YAAKpG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,MAHD,MAGO;AACL0B,YAAKlG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAASpE,OAAT;AAAoB;AAClD;AACD,SAAIuE,OAAOlG,UAAX,EAAuB;AACrB,cAAOkG,OAAOlG,UAAd,EAA0B;AACxBiG,YAAGjL,IAAH,CAAQkL,EAAR;AACA,aAAIxE,QAAQsF,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C0B,gBAAKpG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,UAHD,MAGO;AACL0B,gBAAKlG,UAAL;AACA,eAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sBAASpE,OAAT;AAAoB;AAClD;AACF;AACF,MAXD,MAWO;AACLsE,YAAKjG,UAAL;AACD;AACD,SAAIiG,OAAOjG,UAAX,EAAuB;AACrByE,sBAAeuB,EAAf;AACAC,YAAKrE,QAAQqE,EAAR,CAAL;AACD;AACDD,UAAKC,EAAL;AACA,SAAID,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKxB,WAAL;AACA,WAAI1C,QAAQkF,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CyB,cAAKnG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,QAHD,MAGO;AACLyB,cAAKjG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAAShE,OAAT;AAAoB;AAClD;AACD,WAAIkE,OAAOjG,UAAX,EAAuB;AACrByE,wBAAeuB,EAAf;AACAC,cAAKjE,QAAQiE,EAAR,CAAL;AACD;AACDD,YAAKC,EAAL;AACD;;AAED,YAAOD,EAAP;AACD;;AAED,YAASY,YAAT,GAAwB;AACtB,SAAIZ,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBI,EAApB,EAAwBC,EAAxB,EAA4BU,EAA5B,EAAgCC,EAAhC;;AAEAnB,UAAKxB,WAAL;AACAyB,UAAKmB,gBAAL;AACA,SAAInB,OAAOjG,UAAX,EAAuB;AACrByE,sBAAeuB,EAAf;AACAC,YAAKhE,QAAQgE,EAAR,CAAL;AACD;AACDD,UAAKC,EAAL;AACA,SAAID,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKxB,WAAL;AACAyB,YAAKoB,eAAL;AACA,WAAIpB,OAAOjG,UAAX,EAAuB;AACrByE,wBAAeuB,EAAf;AACAC,cAAK/D,QAAQ+D,EAAR,CAAL;AACD;AACDD,YAAKC,EAAL;AACA,WAAID,OAAOhG,UAAX,EAAuB;AACrBgG,cAAKxB,WAAL;AACA,aAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCpC,OAArC,EAA8C;AAC5C6D,gBAAK7D,OAAL;AACAoC,0BAAe,CAAf;AACD,UAHD,MAGO;AACLyB,gBAAKjG,UAAL;AACA,eAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sBAAS1D,OAAT;AAAoB;AAClD;AACD,aAAI4D,OAAOjG,UAAX,EAAuB;AACrBkG,gBAAKE,YAAL;AACA,eAAIF,OAAOlG,UAAX,EAAuB;AACrB,iBAAIF,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiClC,OAArC,EAA8C;AAC5C6D,oBAAK7D,OAAL;AACAkC,8BAAe,CAAf;AACD,cAHD,MAGO;AACL2B,oBAAKnG,UAAL;AACA,mBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,0BAASxD,OAAT;AAAoB;AAClD;AACD,iBAAI4D,OAAOnG,UAAX,EAAuB;AACrBuG,oBAAK,EAAL;AACA,mBAAIzG,MAAM5I,MAAN,GAAesN,WAAnB,EAAgC;AAC9BgC,sBAAK1G,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,gBAHD,MAGO;AACLgC,sBAAKxG,UAAL;AACA,qBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,4BAASvD,OAAT;AAAoB;AAClD;AACD,mBAAIgE,OAAOxG,UAAX,EAAuB;AACrB,wBAAOwG,OAAOxG,UAAd,EAA0B;AACxBuG,sBAAGvL,IAAH,CAAQwL,EAAR;AACA,uBAAI1G,MAAM5I,MAAN,GAAesN,WAAnB,EAAgC;AAC9BgC,0BAAK1G,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,oBAHD,MAGO;AACLgC,0BAAKxG,UAAL;AACA,yBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,gCAASvD,OAAT;AAAoB;AAClD;AACF;AACF,gBAXD,MAWO;AACL+D,sBAAKvG,UAAL;AACD;AACD,mBAAIuG,OAAOvG,UAAX,EAAuB;AACrByE,gCAAeuB,EAAf;AACAC,sBAAKvD,QAAQ6D,EAAR,CAAL;AACAP,sBAAKC,EAAL;AACD,gBAJD,MAIO;AACLzB,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cA/BD,MA+BO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YA3CD,MA2CO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAjDD,MAiDO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACD,aAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,gBAAKxB,WAAL;AACA,eAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCpC,OAArC,EAA8C;AAC5C6D,kBAAK7D,OAAL;AACAoC,4BAAe,CAAf;AACD,YAHD,MAGO;AACLyB,kBAAKjG,UAAL;AACA,iBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,wBAAS1D,OAAT;AAAoB;AAClD;AACD,eAAI4D,OAAOjG,UAAX,EAAuB;AACrBkG,kBAAKE,YAAL;AACA,iBAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,oBAAKO,cAAL;AACA,mBAAIP,OAAOnG,UAAX,EAAuB;AACrBuG,sBAAKH,YAAL;AACA,qBAAIG,OAAOvG,UAAX,EAAuB;AACrB,uBAAIF,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiClC,OAArC,EAA8C;AAC5CkE,0BAAKlE,OAAL;AACAkC,oCAAe,CAAf;AACD,oBAHD,MAGO;AACLgC,0BAAKxG,UAAL;AACA,yBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,gCAASxD,OAAT;AAAoB;AAClD;AACD,uBAAIiE,OAAOxG,UAAX,EAAuB;AACrBkH,0BAAK,EAAL;AACA,yBAAIpH,MAAM5I,MAAN,GAAesN,WAAnB,EAAgC;AAC9B2C,4BAAKrH,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,sBAHD,MAGO;AACL2C,4BAAKnH,UAAL;AACA,2BAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kCAASvD,OAAT;AAAoB;AAClD;AACD,yBAAI2E,OAAOnH,UAAX,EAAuB;AACrB,8BAAOmH,OAAOnH,UAAd,EAA0B;AACxBkH,4BAAGlM,IAAH,CAAQmM,EAAR;AACA,6BAAIrH,MAAM5I,MAAN,GAAesN,WAAnB,EAAgC;AAC9B2C,gCAAKrH,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,0BAHD,MAGO;AACL2C,gCAAKnH,UAAL;AACA,+BAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sCAASvD,OAAT;AAAoB;AAClD;AACF;AACF,sBAXD,MAWO;AACL0E,4BAAKlH,UAAL;AACD;AACD,yBAAIkH,OAAOlH,UAAX,EAAuB;AACrByE,sCAAeuB,EAAf;AACAC,4BAAKrD,QAAQuD,EAAR,EAAYe,EAAZ,CAAL;AACAlB,4BAAKC,EAAL;AACD,sBAJD,MAIO;AACLzB,qCAAcwB,EAAd;AACAA,4BAAKhG,UAAL;AACD;AACF,oBA/BD,MA+BO;AACLwE,mCAAcwB,EAAd;AACAA,0BAAKhG,UAAL;AACD;AACF,kBA3CD,MA2CO;AACLwE,iCAAcwB,EAAd;AACAA,wBAAKhG,UAAL;AACD;AACF,gBAjDD,MAiDO;AACLwE,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cAvDD,MAuDO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YA7DD,MA6DO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACD,eAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,kBAAKxB,WAAL;AACA,iBAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCpC,OAArC,EAA8C;AAC5C6D,oBAAK7D,OAAL;AACAoC,8BAAe,CAAf;AACD,cAHD,MAGO;AACLyB,oBAAKjG,UAAL;AACA,mBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,0BAAS1D,OAAT;AAAoB;AAClD;AACD,iBAAI4D,OAAOjG,UAAX,EAAuB;AACrBkG,oBAAKE,YAAL;AACA,mBAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,sBAAKO,cAAL;AACA,qBAAIP,OAAOnG,UAAX,EAAuB;AACrByE,kCAAeuB,EAAf;AACAC,wBAAKpD,QAAQsD,EAAR,CAAL;AACAH,wBAAKC,EAAL;AACD,kBAJD,MAIO;AACLzB,iCAAcwB,EAAd;AACAA,wBAAKhG,UAAL;AACD;AACF,gBAVD,MAUO;AACLwE,+BAAcwB,EAAd;AACAA,sBAAKhG,UAAL;AACD;AACF,cAhBD,MAgBO;AACLwE,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACD,iBAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,oBAAKxB,WAAL;AACA,mBAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCpC,OAArC,EAA8C;AAC5C6D,sBAAK7D,OAAL;AACAoC,gCAAe,CAAf;AACD,gBAHD,MAGO;AACLyB,sBAAKjG,UAAL;AACA,qBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,4BAAS1D,OAAT;AAAoB;AAClD;AACD,mBAAI4D,OAAOjG,UAAX,EAAuB;AACrByE,gCAAeuB,EAAf;AACAC,sBAAKnD,SAAL;AACD;AACDkD,oBAAKC,EAAL;AACA,mBAAID,OAAOhG,UAAX,EAAuB;AACrBgG,sBAAKxB,WAAL;AACAyB,sBAAKS,cAAL;AACA,qBAAIT,OAAOjG,UAAX,EAAuB;AACrByE,kCAAeuB,EAAf;AACAC,wBAAKlD,QAAQkD,EAAR,CAAL;AACD;AACDD,sBAAKC,EAAL;AACD;AACF;AACF;AACF;AACF;AACF;;AAED,YAAOD,EAAP;AACD;;AAED,YAASU,YAAT,GAAwB;AACtB,SAAIV,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBI,EAApB,EAAwBC,EAAxB;;AAEAR,UAAKxB,WAAL;AACA,SAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCxB,OAArC,EAA8C;AAC5CiD,YAAKjD,OAAL;AACAwB,sBAAe,CAAf;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAS9C,OAAT;AAAoB;AAClD;AACD,SAAIgD,OAAOjG,UAAX,EAAuB;AACrBkG,YAAK,EAAL;AACA,WAAIhD,QAAQ8D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,cAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,QAHD,MAGO;AACL2B,cAAKnG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAAS5C,OAAT;AAAoB;AAClD;AACD,WAAIgD,OAAOnG,UAAX,EAAuB;AACrB,gBAAOmG,OAAOnG,UAAd,EAA0B;AACxBkG,cAAGlL,IAAH,CAAQmL,EAAR;AACA,eAAIjD,QAAQ8D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,kBAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,YAHD,MAGO;AACL2B,kBAAKnG,UAAL;AACA,iBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,wBAAS5C,OAAT;AAAoB;AAClD;AACF;AACF,QAXD,MAWO;AACL+C,cAAKlG,UAAL;AACD;AACD,WAAIkG,OAAOlG,UAAX,EAAuB;AACrBmG,cAAKmB,gBAAL;AACA,aAAInB,OAAOnG,UAAX,EAAuB;AACrBuG,gBAAK,EAAL;AACA,eAAInD,QAAQ4D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CgC,kBAAK1G,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,YAHD,MAGO;AACLgC,kBAAKxG,UAAL;AACA,iBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,wBAAS1C,OAAT;AAAoB;AAClD;AACD,eAAImD,OAAOxG,UAAX,EAAuB;AACrB,oBAAOwG,OAAOxG,UAAd,EAA0B;AACxBuG,kBAAGvL,IAAH,CAAQwL,EAAR;AACA,mBAAIpD,QAAQ4D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CgC,sBAAK1G,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,gBAHD,MAGO;AACLgC,sBAAKxG,UAAL;AACA,qBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,4BAAS1C,OAAT;AAAoB;AAClD;AACF;AACF,YAXD,MAWO;AACLkD,kBAAKvG,UAAL;AACD;AACD,eAAIuG,OAAOvG,UAAX,EAAuB;AACrBwG,kBAAKJ,YAAL;AACA,iBAAII,OAAOxG,UAAX,EAAuB;AACrByE,8BAAeuB,EAAf;AACAC,oBAAK3C,QAAQ4C,EAAR,EAAYK,EAAZ,CAAL;AACAP,oBAAKC,EAAL;AACD,cAJD,MAIO;AACLzB,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YAVD,MAUO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UArCD,MAqCO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QA3CD,MA2CO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MAtED,MAsEO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;AACD,SAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKxB,WAAL;AACA,WAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCxB,OAArC,EAA8C;AAC5CiD,cAAKjD,OAAL;AACAwB,wBAAe,CAAf;AACD,QAHD,MAGO;AACLyB,cAAKjG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAAS9C,OAAT;AAAoB;AAClD;AACD,WAAIgD,OAAOjG,UAAX,EAAuB;AACrBkG,cAAK,EAAL;AACA,aAAIhD,QAAQ8D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,gBAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,UAHD,MAGO;AACL2B,gBAAKnG,UAAL;AACA,eAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sBAAS5C,OAAT;AAAoB;AAClD;AACD,aAAIgD,OAAOnG,UAAX,EAAuB;AACrB,kBAAOmG,OAAOnG,UAAd,EAA0B;AACxBkG,gBAAGlL,IAAH,CAAQmL,EAAR;AACA,iBAAIjD,QAAQ8D,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C2B,oBAAKrG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,cAHD,MAGO;AACL2B,oBAAKnG,UAAL;AACA,mBAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,0BAAS5C,OAAT;AAAoB;AAClD;AACF;AACF,UAXD,MAWO;AACL+C,gBAAKlG,UAAL;AACD;AACD,aAAIkG,OAAOlG,UAAX,EAAuB;AACrBmG,gBAAKC,YAAL;AACA,eAAID,OAAOnG,UAAX,EAAuB;AACrByE,4BAAeuB,EAAf;AACAC,kBAAKxE,QAAQyE,EAAR,CAAL;AACAF,kBAAKC,EAAL;AACD,YAJD,MAIO;AACLzB,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAVD,MAUO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QArCD,MAqCO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASqB,aAAT,GAAyB;AACvB,SAAIrB,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBI,EAApB,EAAwBC,EAAxB,EAA4BU,EAA5B;;AAEAlB,UAAKxB,WAAL;AACA,SAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiChB,OAArC,EAA8C;AAC5CyC,YAAKzC,OAAL;AACAgB,sBAAe,CAAf;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAStC,OAAT;AAAoB;AAClD;AACD,SAAIwC,OAAOjG,UAAX,EAAuB;AACrBkG,YAAKE,YAAL;AACA,WAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,cAAKO,cAAL;AACA,aAAIP,OAAOnG,UAAX,EAAuB;AACrBuG,gBAAKH,YAAL;AACA,eAAIG,OAAOvG,UAAX,EAAuB;AACrBwG,kBAAK,EAAL;AACAU,kBAAKP,eAAL;AACA,iBAAIO,OAAOlH,UAAX,EAAuB;AACrB,sBAAOkH,OAAOlH,UAAd,EAA0B;AACxBwG,oBAAGxL,IAAH,CAAQkM,EAAR;AACAA,sBAAKP,eAAL;AACD;AACF,cALD,MAKO;AACLH,oBAAKxG,UAAL;AACD;AACD,iBAAIwG,OAAOxG,UAAX,EAAuB;AACrByE,8BAAeuB,EAAf;AACAC,oBAAKvC,QAAQyC,EAAR,EAAYK,EAAZ,CAAL;AACAR,oBAAKC,EAAL;AACD,cAJD,MAIO;AACLzB,6BAAcwB,EAAd;AACAA,oBAAKhG,UAAL;AACD;AACF,YAnBD,MAmBO;AACLwE,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAzBD,MAyBO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QA/BD,MA+BO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MArCD,MAqCO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;AACD,SAAIgG,OAAOhG,UAAX,EAAuB;AACrBgG,YAAKxB,WAAL;AACA,WAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiChB,OAArC,EAA8C;AAC5CyC,cAAKzC,OAAL;AACAgB,wBAAe,CAAf;AACD,QAHD,MAGO;AACLyB,cAAKjG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAAStC,OAAT;AAAoB;AAClD;AACD,WAAIwC,OAAOjG,UAAX,EAAuB;AACrBkG,cAAKE,YAAL;AACA,aAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,gBAAK,EAAL;AACAI,gBAAKI,eAAL;AACA,eAAIJ,OAAOvG,UAAX,EAAuB;AACrB,oBAAOuG,OAAOvG,UAAd,EAA0B;AACxBmG,kBAAGnL,IAAH,CAAQuL,EAAR;AACAA,oBAAKI,eAAL;AACD;AACF,YALD,MAKO;AACLR,kBAAKnG,UAAL;AACD;AACD,eAAImG,OAAOnG,UAAX,EAAuB;AACrByE,4BAAeuB,EAAf;AACAC,kBAAKtC,QAAQwC,EAAR,CAAL;AACAH,kBAAKC,EAAL;AACD,YAJD,MAIO;AACLzB,2BAAcwB,EAAd;AACAA,kBAAKhG,UAAL;AACD;AACF,UAnBD,MAmBO;AACLwE,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAzBD,MAyBO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASoB,cAAT,GAA0B;AACxB,SAAIpB,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AAEAH,UAAKxB,WAAL;AACA,SAAI1E,MAAM+G,MAAN,CAAarC,WAAb,EAA0B,CAA1B,MAAiCZ,OAArC,EAA8C;AAC5CqC,YAAKrC,OAAL;AACAY,sBAAe,CAAf;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAASlC,OAAT;AAAoB;AAClD;AACD,SAAIoC,OAAOjG,UAAX,EAAuB;AACrBkG,YAAKE,YAAL;AACA,WAAIF,OAAOlG,UAAX,EAAuB;AACrBmG,cAAKY,gBAAL;AACA,aAAIZ,OAAOnG,UAAX,EAAuB;AACrByE,0BAAeuB,EAAf;AACAC,gBAAKnC,QAAQqC,EAAR,CAAL;AACAH,gBAAKC,EAAL;AACD,UAJD,MAIO;AACLzB,yBAAcwB,EAAd;AACAA,gBAAKhG,UAAL;AACD;AACF,QAVD,MAUO;AACLwE,uBAAcwB,EAAd;AACAA,cAAKhG,UAAL;AACD;AACF,MAhBD,MAgBO;AACLwE,qBAAcwB,EAAd;AACAA,YAAKhG,UAAL;AACD;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASI,UAAT,GAAsB;AACpB,SAAIJ,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;;AAEAF,UAAKxB,WAAL;AACAyB,UAAK,EAAL;AACA,SAAIlC,QAAQiD,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C0B,YAAKpG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,MAHD,MAGO;AACL0B,YAAKlG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAS/B,OAAT;AAAoB;AAClD;AACD,YAAOkC,OAAOlG,UAAd,EAA0B;AACxBiG,UAAGjL,IAAH,CAAQkL,EAAR;AACA,WAAInC,QAAQiD,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3C0B,cAAKpG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,QAHD,MAGO;AACL0B,cAAKlG,UAAL;AACA,aAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,oBAAS/B,OAAT;AAAoB;AAClD;AACF;AACD,SAAIiC,OAAOjG,UAAX,EAAuB;AACrByE,sBAAeuB,EAAf;AACAC,YAAKhC,SAAL;AACD;AACD+B,UAAKC,EAAL;;AAEA,YAAOD,EAAP;AACD;;AAED,YAASuB,WAAT,GAAuB;AACrB,SAAIvB,EAAJ,EAAQC,EAAR;;AAEAD,UAAK,EAAL;AACA,SAAI9B,QAAQ8C,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CyB,YAAKnG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,MAHD,MAGO;AACLyB,YAAKjG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAS5B,OAAT;AAAoB;AAClD;AACD,SAAI8B,OAAOjG,UAAX,EAAuB;AACrB,cAAOiG,OAAOjG,UAAd,EAA0B;AACxBgG,YAAGhL,IAAH,CAAQiL,EAAR;AACA,aAAI/B,QAAQ8C,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CyB,gBAAKnG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,UAHD,MAGO;AACLyB,gBAAKjG,UAAL;AACA,eAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,sBAAS5B,OAAT;AAAoB;AAClD;AACF;AACF,MAXD,MAWO;AACL6B,YAAKhG,UAAL;AACD;;AAED,YAAOgG,EAAP;AACD;;AAED,YAASM,aAAT,GAAyB;AACvB,SAAIN,EAAJ;;AAEA,SAAI5B,QAAQ4C,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CwB,YAAKlG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,MAHD,MAGO;AACLwB,YAAKhG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAAS1B,OAAT;AAAoB;AAClD;;AAED,YAAO2B,EAAP;AACD;;AAED,YAASsB,cAAT,GAA0B;AACxB,SAAItB,EAAJ;;AAEA,SAAI1B,QAAQ0C,IAAR,CAAalH,MAAMmH,MAAN,CAAazC,WAAb,CAAb,CAAJ,EAA6C;AAC3CwB,YAAKlG,MAAMmH,MAAN,CAAazC,WAAb,CAAL;AACAA;AACD,MAHD,MAGO;AACLwB,YAAKhG,UAAL;AACA,WAAI8E,oBAAoB,CAAxB,EAA2B;AAAEiB,kBAASxB,OAAT;AAAoB;AAClD;;AAED,YAAOyB,EAAP;AACD;;AAEDjB,gBAAa3E,uBAAb;;AAEA,OAAI2E,eAAe/E,UAAf,IAA6BwE,gBAAgB1E,MAAM5I,MAAvD,EAA+D;AAC7D,YAAO6N,UAAP;AACD,IAFD,MAEO;AACL,SAAIA,eAAe/E,UAAf,IAA6BwE,cAAc1E,MAAM5I,MAArD,EAA6D;AAC3D6O,gBAASR,oBAAT;AACD;;AAED,WAAMJ,yBACJN,mBADI,EAEJD,iBAAiB9E,MAAM5I,MAAvB,GAAgC4I,MAAMmH,MAAN,CAAarC,cAAb,CAAhC,GAA+D,IAF3D,EAGJA,iBAAiB9E,MAAM5I,MAAvB,GACIgO,oBAAoBN,cAApB,EAAoCA,iBAAiB,CAArD,CADJ,GAEIM,oBAAoBN,cAApB,EAAoCA,cAApC,CALA,CAAN;AAOD;AACF;;AAED4C,QAAOC,OAAP,GAAiB;AACfC,gBAAa1J,eADE;AAEf3G,UAAawI;AAFE,EAAjB,C;;;;;;;;;;;;;;;;;;;;;;ACrxCA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAEqB7L,U;;;AAiBjB,uBAAYZ,MAAZ,EAAmBuU,YAAnB,EAAgCtL,CAAhC,EAAmC;AAAA;;AAAA;;AAAA,wBAd5BhK,sBAAWD,IAciB;;AAAA,0BAX1B,EAW0B;;AAAA,uBAL7BD,iBAAMC,IAKuB;;AAAA,6BAFvB,KAEuB;;AAE/B,SAAMqB,QAAML,OAAO8G;AACf;AADQ,MAEP0N,SAFO,CAEG;AAAA,cAAG,uBAAcvV,sBAAWwG,SAA5B;AAAA,MAFH,EAE0Cf,KAF1C,EAAZ;;AAF+B,wBAMnB1E,MANmB;;AAQ/B,SAAMyU,iBAAiB,SAAjBA,cAAiB,IAAG;AACtBxL,SAAEvI,MAAF,CAAS8C,CAAT;AACA,aAAKtD,KAAL;AACH,MAHD;;AAKAG,WAAM8D,MAAN,CAAa;AAAA,cAAGX,EAAEsF,IAAF,KAASnG,iBAAMiH,IAAlB;AAAA,MAAb,EACMvG,EADN,CACS,aAAI;AACL,aAAKqR,IAAL,CAAU,MAAV,EAAiB3F,EAAE7M,IAAnB;AACA,4BAAYvC,QAAQC,GAAR,CAAY,qBAAZ,EAAkCmP,EAAE7M,IAApC,CAAZ;AACD,MAJP,EAISuB,GAJT,CAIa;AAAA,cAAGsL,EAAE7M,IAAL;AAAA,MAJb,EAKMK,SALN,CAKgBkS,cALhB,EAK+BA,cAL/B;;AAOApU,WAAM8D,MAAN,CAAa;AAAA,cAAGX,EAAEsF,IAAF,KAASnG,iBAAMmH,QAAlB;AAAA,MAAb,EACMvH,SADN,CACgB,gBAAM;AAAA,0BACFtD,sBAAW6G,UADT;;AAEd,4BAAY/G,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,qCAAZ,EAAkDsC,IAAlD,CAAzB;AACA,WAAIL,IAAEK,KAAKA,IAAL,CAAU0B,KAAV,CAAgB,EAAhB,CAAN;AACA,WAAIxC,YAAU,EAAd;AACA,cAAMS,EAAEiC,MAAR;AAAgB1C,mBAAUwG,IAAV,CAAe+M,SAAS,OAAK9S,EAAE+S,KAAF,EAAL,GAAe/S,EAAE+S,KAAF,EAAxB,CAAf;AAAhB,QACA,qBAAY7V,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,sBAAoBwB,UAAU0C,MAA1C,CAAzB;AACA,WAAI1C,UAAU0C,MAAV,IAAkB,EAAtB,EAA0B;AAAA,4BACV7E,sBAAWyG,KADD;;AAEtB,8BAAY3G,iBAAMoI,IAAlB,IAAwBxH,QAAQC,GAAR,oBAAxB;AACAI,gBAAOG,QAAP,CAAgB+D,KAAhB,CAAsB,8BAA4BhC,IAAlD;AACH,QAJD,MAIO;AACHqS,sBAAanT,SAAb;AACH;AACH,MAfN;;AAiBAf,WAAM8D,MAAN,CAAa;AAAA,cAAGX,EAAEsF,IAAF,KAASnG,iBAAMgH,IAAlB;AAAA,MAAb,EACMpH,SADN,CACgB,aAAG;AAAA,0BACCtD,sBAAWwG,SADZ;;AAEX,4BAAY1G,iBAAMW,IAAlB,IAAwBC,QAAQC,GAAR,CAAY,2BAAZ,CAAxB;AACAqJ,SAAExI,OAAF;AACD,MALP,EAMMgU,cANN,EAOM,YAAI;AACF,4BAAY1V,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,uBAAZ,CAAzB;AACD,MATP;;AAYAI,YAAO8G,IAAP,CACCvE,SADD,CACW,IADX,EACgB,IADhB,EACqB,aAAG;AACtB,4BAAcgC,OAAd,CAAsB;AAAA,gBAAGsQ,EAAE3U,KAAF,CAAQ,IAAR,CAAH;AAAA,QAAtB;AACAX,kBAAW,YAAI;AACb,eAAKmV,IAAL,CAAU,OAAV;AACD,QAFD,EAEE,EAFF;AAGD,MAND;AAjD+B;AAwDlC;;;;6BAEO;AACN,2BAAY3V,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,mCAAZ,CAAzB;AACA,YAAK8U,IAAL,CAAU,OAAV,EAAkB,IAAlB;AACA,yBAAYxU,KAAZ;AACD;;AAED;;;;;;8BAGSsD,C,EAAG;AAAA,kBACV,IADU,EACCA,CADD;;AAEV,cAAO,IAAP;AACD;;;6BAEc;AACb,WAAI,UAAKM,MAAT,aACE,IADF,yDAEK;AACL,cAAO,IAAP;AACD;;AAED;;;;mCACqB;AACnB,WAAI,UAAKA,MAAT,mBACE,IADF,EACmB,CAAC,mDADpB,OAEK;AACL,cAAO,IAAP;AACD;;;gCAEUiK,E,EAAI;AACb,cAAO,oBAAc5J,MAAd,CAAqB;AAAA,gBAAG0Q,EAAEC,KAAF,MAAW/G,EAAd;AAAA,QAArB,EAAuC,CAAvC,CAAP;AACD;;;iCAMWA,E,EAAGgH,W,EAAa;AAAA;;AACxB,2BAAYhW,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,yBAAZ,CAAzB;AACA,WAAI,CAACmO,EAAL,EAAS;AACLA,cAAG,CAAE,IAAIiH,IAAJ,EAAL;AACH,QAFD,MAEO;AACH,aAAI,oBAAcC,IAAd,CAAmB;AAAA,kBAAGJ,EAAEC,KAAF,OAAY/G,EAAf;AAAA,UAAnB,CAAJ,EAA2C,MAAM,mCAAiCA,EAAvC;AAC9C;AACD,2BAAYhP,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,uBAAZ,CAAzB;AACA,WAAMsV,UAAQC,OAAO,MAAIpH,EAAJ,GAAO,GAAd,CAAd;AACA,WAAIhK,IAAI;AACN,iBAAQ,kBAAY+C,IAAZ,CACK3C,MADL,CACY;AAAA,kBAAG+Q,QAAQtB,IAAR,CAAa7Q,EAAEoK,GAAf,CAAH;AAAA,UADZ,CADF;AAGN,kBAAS,eAAC3J,CAAD,EAAGnB,IAAH,EAAuB;AAAA,eAAf+S,QAAe,uEAAN,CAAM;;AAC5B,eAAI,QAAO5R,CAAP,yCAAOA,CAAP,OAAY4D,sBAAhB,EACE5D,IAAEA,EAAEI,KAAF,CAAQ,IAAR,CAAF;AACF,eAAIoD,MAAMC,OAAN,CAAczD,CAAd,KAAkBA,EAAEM,MAAxB,EAAgC;AAC9BN,eAAEoE,IAAF,WAAemG,EAAf,SAAqBqH,QAArB;AACA,oBAAO,oBAAYzU,KAAZ,CAAkB6C,CAAlB,EAAoBnB,IAApB,CAAP;AACD,YAHD,MAIK;AACR,UAXK;AAYN,kBAAS,iBAAI;AACT,eAAIgT,UAAQ,OAAKC,UAAL,CAAgBvH,EAAhB,CAAZ;AACA,eAAIsH,OAAJ,EAAa;AACX,mCAAYtW,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,kBAAZ,EAA+BmO,EAA/B,CAAzB;AACAxO,wBAAW8V,QAAQX,IAAR,CAAaa,IAAb,CAAkBF,OAAlB,EAA0B,OAA1B,EAAkCA,OAAlC,CAAX,EAAsD,EAAtD;AACA,mCAAcG,MAAd,CAAqB,sBAAcpQ,OAAd,CAAsBiQ,OAAtB,CAArB,EAAoD,CAApD;AACA,iBAAI,sBAAclR,MAAd,CAAqB;AAAA,sBAAG0Q,EAAEY,MAAF,IAAU/S,mBAAQ+G,IAAR,GAAa/G,mBAAQgH,OAA/B,CAAH;AAAA,cAArB,EAAiE5F,MAAjE,KAA0E,CAA1E,4BAAJ,EAAqG,OAAK5D,KAAL;AACtG,YALD,MAME,sBAAYnB,iBAAMoI,IAAlB,IAAwBxH,QAAQC,GAAR,CAAY,gDAAZ,EAA6DmO,EAA7D,CAAxB;AACL,UArBK;AAsBN,iBAAQ,gBAAI;AACR;AACA,yCAAsB;AAClB,iBAAM2H,KAAG,sBAAcvR,MAAd,CAAqB;AAAA,sBAAG0Q,EAAEY,MAAF,IAAU/S,mBAAQ+G,IAAR,GAAa/G,mBAAQgH,OAA/B,CAAH;AAAA,cAArB,CAAT;AACA,iBAAIgM,GAAG5R,MAAP,EAAe,OAAO,KAAP;AACf,mCAAY/E,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,mBAAZ,EAAgCmO,EAAhC,CAAzB;AACA,mCAAc5J,MAAd,CAAqB;AAAA,sBAAG0Q,EAAEY,MAAF,GAAU/S,mBAAQiH,IAArB;AAAA,cAArB,EAAiDpF,OAAjD,CAAyD;AAAA,sBAAG5E,QAAQC,GAAR,CAAY,YAAZ,EAAyBiV,CAAzB,CAAH;AAAA,cAAzD;AACA,oBAAO,IAAP;AACH;AACD,kBAAO,KAAP;AACH;AAhCK,QAAR;AAkCA,WAAIA,CAAJ;AACA,2BAAY9V,iBAAMW,IAAlB,IAAwBC,QAAQC,GAAR,CAAY,mBAAZ,EAAgCmO,EAAhC,CAAxB;AACA,2BAAcnG,IAAd,CAAoBiN,IAAE,IAAIc,iBAAJ,CAAY5H,EAAZ,EAAehK,CAAf,oBAA4BgR,WAA5B,CAAtB;AACA,2BAAYhW,iBAAMW,IAAlB,IAAwBC,QAAQC,GAAR,CAAY,oBAAZ,EAAiCmO,EAAjC,CAAxB;AACA,cAAQ8G,CAAR;AACH;;;yBApDe;AACd,cAAO,CAAC,EAAE,qBAAa5V,sBAAWwG,SAAX,GAAqBxG,sBAAWqK,OAAhC,GAAwCrK,sBAAWsK,OAAhE,CAAF,CAAR;AACD;;;;GA9GmCqM,iBAAOC,Y,gEA+G1CxO,wB;mBA/GgBzG,U;;;;;;;;;;ACPrB,oC;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAEqB+U,O;;;AAwJjB;;;;;;;;;;AAZA;;;;;;;;;AAZA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;AA4IA,sBAAY5H,EAAZ,EAAe/N,MAAf,EAAsBb,KAAtB,EAA4B4V,WAA5B,EAAyC;AAAA;;AAAA;;AAAA,4BA9IlCrS,mBAAQ+G,IA8I0B;;AAAA,4BArIlC,KAqIkC;;AAAA,2BAnHnC1K,iBAAMC,IAmH6B;;AAAA,iCA1G7B,IA0G6B;;AAAA,iCAjG7B,KAiG6B;;AAAA,2BApDnC,IAAImE,aAAJ,EAoDmC;;AAAA,0BA3CpC,IA2CoC;;AAAA,gCAlC5B,EAkC4B;;AAAA,4BAzBhC,EAyBgC;;AAAA,8BAtB9B,CAsB8B;;AAAA,yBAZnC,EAYmC;;AAAA,4CAsG5B2S,SAtG4B,EAsGjB;AACpB,iBAAI,QAAOA,SAAP,yCAAOA,SAAP,eAA4B,EAA5B,CAAJ,EAAoC;AAChC,qBAAIA,UAAUvN,GAAd,EACI,OAAO,wBAAkBuN,UAAUvN,GAAV,CAAcwF,EAAhC,CAAP;AACJ,qBAAI+H,UAAU/H,EAAd,EACI,OAAO,wBAAkB+H,UAAU/H,EAA5B,CAAP;AACJ,wBAAO,IAAP;AACH;AACD,iCAAYhP,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,8BAAZ,EAA2CkW,SAA3C,CAAzB;AACA,iBAAMvN,MAAM,eAASuN,SAAT,CAAZ;AACA,iBAAI,CAACvN,GAAL,EAAU;AACV,oBAAOA,IAAI/H,OAAJ,CAAY+H,GAAnB;AACA,oBAAOA,IAAI/H,OAAJ,CAAYC,OAAnB;AACA,oBAAO8H,IAAI/H,OAAJ,CAAYE,MAAnB;AACA,oBAAO6H,IAAI/H,OAAX;AACA,oBAAO,eAASsV,SAAT,CAAP;AACA,iBAAI,CAACzR,OAAOC,IAAP,iBAAsBR,MAA3B,EAAmC;AAC/B,6CAAsB,KAAK5D,KAAL;AACzB;AACJ,UAzHwC;;AAAA,2CA+H7B4V,SA/H6B,EA+HlB;AACnB,oBAAO,eAASA,YAAU,CAAnB,CAAP;AACH,UAjIwC;;AAAA,0CAoI9BA,SApI8B,EAoInB;AAClB,iBAAI,CAACA,SAAL,EAAgB,OAAO,IAAP;AAChB,iBAAI,QAAOA,SAAP,yCAAOA,SAAP,eAA0B,EAA1B,CAAJ,EAAkC;AAC9B,qBAAIA,UAAUvN,GAAd,EAAmB,OAAOuN,UAAUvN,GAAjB,CAAnB,KACK,OAAO,IAAP;AACR;AACD,oBAAO,eAASuN,SAAT,CAAP;AACH,UA3IwC;;AAAA,+CAoJzBC,OApJyB,EAoJjB1T,IApJiB,EAoJZ7B,OApJY,EAoJH;AAAA,2BAClC,IADkC,EACpB,sBAAc,CADM;;AAElC,iBAAMsV,+BAAN;AACA,4BAASA,SAAT,IAAoB,EAAC/H,IAAG+H,SAAJ,EAAcvN,KAAI,EAACwF,IAAG+H,SAAJ,EAAcC,gBAAd,EAAsB1T,UAAtB,EAAlB,EAA8C7B,gBAA9C,EAApB;AACC,wBAASuN,EAAT,EAAY9E,CAAZ,EAAc;AAAA;;AACX,qBAAM+M,OAAOvR,iBAAWuR,IAAX,CACT,gBACK7R,MADL,CAEQ;AAAA,4BAAMjC,KAAKqG,GAAL,IAAUrG,KAAKqG,GAAL,CAASwF,EAAT,KAAcA,EAA9B;AAAA,kBAFR;AAII;AACA;AACA;AANJ,kBAOKzL,IAPL,CAOU,CAPV,CADS,EAST,gBACK6B,MADL,CAEQ;AAAA,4BAAMjC,KAAKqG,GAAL,IAAUrG,KAAKqG,GAAL,CAASwF,EAAT,KAAcA,EAA9B;AAAA,kBAFR;AAII;AACA;AACA;AANJ,kBAOKzL,IAPL,CAOU,CAPV,CATS,EAiBXA,IAjBW,CAiBN,CAjBM,CAAb;;AAmBA0T,sBAAKC,SAAL,CAAe;AAAA,4BAAM/T,KAAK4G,IAAL,IAAWnG,iBAAMiH,IAAjB,IAAuB1H,KAAK4G,IAAL,KAAYnG,iBAAMkH,QAA/C;AAAA,kBAAf,EACKb,MADL,CACY,UAACL,CAAD,EAAGjF,CAAH,EAAKoB,CAAL,EAAS;AACb,yBAAIA,KAAG,CAAP,EAAU;AACNpB,2BAAEnB,SAAF,CAAY,iBAAO;AACf,mDAAYxD,iBAAMA,KAAlB,IAAyBY,QAAQuE,KAAR,CAAc,4BAAd,EAA2C6J,EAA3C,EAA8C7J,KAA9C,CAAzB;;AADe,yCAEf,MAFe,EAEHxB,mBAAQiH,IAFL;;AAGf,2DAAsB;AAAA,6CAClB,MADkB,EACNjH,mBAAQ6G,OADF;;AAElB,uDAAYxK,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,wCAAZ,kBAAzB;AACA,wCAAKM,KAAL,CAAW,IAAX;AACH;AACD+I,+BAAEvI,MAAF,CAASwD,KAAT;AACA,oCAAKwQ,IAAL,CAAU,MAAV,EAAiBxQ,KAAjB;AACH,0BAVD,EAUE,IAVF;AAWH,sBAZD,MAYO,OAAOR,CAAP;AACV,kBAfL,EAeM,EAfN;;AAiBA,qBAAMwS,WAAU,QAAOH,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,GAA8BA,QAAQ3Q,OAAR,CAAgB,QAAhB,IAA0B,CAAxD,GAA4D2Q,QAAQnS,KAAR,CAAc,GAAd,EAAmBwB,OAAnB,CAA2B,QAA3B,IAAqC,CAAjH;AACA,iCACKjB,MADL,CACY;AAAA,4BAAMjC,KAAKqG,GAAL,CAASwF,EAAT,KAAcA,EAApB;AAAA,kBADZ,EAEKoI,SAFL,CAEeH,IAFf,EAGK3S,EAHL,CAGQ;AAAA,4BAAG,sBAAYtE,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,mBAAZ,EAAgC4D,EAAE+E,GAAF,CAAMwF,EAAtC,EAAyCA,EAAzC,CAA5B;AAAA,kBAHR,EAIK/E,MAJL,CAIY,UAACoN,GAAD,EAAK5S,CAAL,EAAS;AACb,yBAAIA,EAAEtB,IAAF,IAAQ,CAACgU,QAAb,EAAuBE,IAAIlU,IAAJ,GAASkU,IAAIlU,IAAJ,CAAShB,MAAT,CAAgB,CAACsC,EAAEtB,IAAH,CAAhB,CAAT;AACvB,4BAAOkU,GAAP;AACH,kBAPL,EAOM,EAAC7N,KAAI,eAASwF,EAAT,EAAaxF,GAAlB,EAAsB4E,kBAAtB,EAAkCjL,MAAK,EAAvC,EAPN,EAQKmB,EARL,CAQQ;AAAA,4BAAG,sBAAYtE,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,sBAAZ,EAAmC4D,CAAnC,CAA5B;AAAA,kBARR,EASK2S,SATL,CASeH,KAAK7R,MAAL,CAAY;AAAA,4BAAMjC,KAAK4G,IAAL,IAAWnG,iBAAMiH,IAAjB,IAAuB1H,KAAK4G,IAAL,KAAYnG,iBAAMkH,QAA/C;AAAA,kBAAZ,CATf,EAUKtH,SAVL,CAUe,gBAAM;AACb,2CAAYxD,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,iCAAZ,EAA8CmO,EAA9C,EAAiD7L,IAAjD,CAAzB;;AADa,iCAEb,MAFa,EAEDQ,mBAAQiH,IAFP;;AAGb,iDAAoBrE,IAApB,CAAyBpD,IAAzB;AACA+G,uBAAExI,OAAF,CAAUyB,IAAV;AACA,4BAAKwS,IAAL,CAAU,MAAV,EAAiBxS,IAAjB;AACH,kBAhBL,EAiBI,iBAAO;AACH,2CAAYnD,iBAAMe,KAAlB,IAAyBH,QAAQuE,KAAR,CAAc,6BAAd,EAA4C6J,EAA5C,EAA+C7J,KAA/C,CAAzB;AACH,kBAnBL;AAoBI;AACA,6BAAI;AACA,2CAAYnF,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,gCAAZ,EAA6CkW,SAA7C,CAAzB;AACAvW,gCAAW;AAAA,gCAAI,0BAAkBwO,EAAlB,CAAJ;AAAA,sBAAX,EAAqC,EAArC,EAFA,CAE0C;AAC7C,kBAxBL;AAyBH,cA/DA,EA+DCwH,IA/DD,CA+DM,IA/DN,CAAD,CA+DcO,SA/Dd,EA+DwBtV,OA/DxB;AAgEA,oBAAO,eAASsV,SAAT,EAAoBvN,GAA3B;AACH,UAzNwC;;AAAA,oDAwWpBD,KAxWoB,EAwWb;AACxB,qBAAOA,KAAP;AACI,sBAAK3F,iBAAMgH,IAAX;AACI;AACJ,sBAAKhH,iBAAMiH,IAAX;AACI;AACJ,sBAAKjH,iBAAMoH,KAAX;AACI,4BAAO,KAAKsM,KAAZ;AACJ;AACI;AARR;AAUH,UAnXwC;;AAAA,sDA2XlB/N,KA3XkB,EA2XZtI,MA3XY,EA2XJ;AAAA;;AACjC,iBAAI,KAAKsW,SAAL,CAAehO,KAAf,CAAJ,EAA2B;AAC3B;AACA,iBAAMiO,iBAAiBvW,OAAOwU,SAAP,CAAiB;AAAA,wBAAG,CAAC,OAAK8B,SAAL,CAAehO,KAAf,CAAJ;AAAA,cAAjB,CAAvB;AACAiO,4BAAehU,SAAf,CAAyB,aAAG;AACxB,wBAAKmS,IAAL,CAAUpM,KAAV,EAAgBvF,CAAhB;AACH,cAFD;AAGA,oBAAOwT,cAAP;AACH,UAnYwC;;AAAA,2BAE1BpX,KAF0B;;AAGrC,6BAAWJ,iBAAMe,KAAjB,IAAwBH,QAAQC,GAAR,CAAY,cAAZ,EAA2B,GAAGyF,KAAH,CAASmR,IAAT,CAAcC,SAAd,CAA3B,CAAxB;;AAHqC,iCAInB,QAAO1B,WAAP,yCAAOA,WAAP,eAA4B,IAA5B,CAAD,GAAmCA,WAAnC,0BAJoB;;AAAA,wBAK7BhH,EAL6B,GAKzB;;AAEZ,aAAG,sBAAarL,mBAAQ6G,OAAR,GAAgB7G,mBAAQ8G,MAArC,CAAH,EAAiD,yCAPZ,CAOoB;;AAPpB,4BASvBxJ,MATuB,GASf;AACtB;;;AAVqC,0BAWzBA,OAAO8G,IAAP,CAAY0N,SAAZ,CAAsB;AAAA,oBAAM,EAAE,qBAAY9R,mBAAQ8G,MAAtB,CAAN;AAAA,UAAtB,EACPnG,EADO,CACJ;AAAA,oBAAG,qBAAYtE,iBAAMe,KAAlB,IAAyBH,QAAQC,GAAR,CAAY,uCAAZ,EAAoDmD,EAAEoK,GAAtD,CAA5B;AAAA,UADI,EAEP/I,OAFO,CAEC,gBAAM;AACX,iBAAMmE,MAAI,MAAKmO,YAAL,CAAkBxU,IAAlB,CAAV;AACA,iBAAMsB,iBAAMtB,IAAN,IAAWiL,KAAIjL,KAAKiL,GAAL,CAAS0E,SAAT,CAAmB,CAAnB,EAAqB3P,KAAKiL,GAAL,CAASwJ,WAAT,CAAqB,GAArB,CAArB,CAAf,EAA+DpO,KAAI,CAAC,uBAAgBA,GAAhB,KAAsB,EAACA,KAAI,IAAL,EAAvB,EAAmCA,GAAtG,GAAN;AACA,iBAAI/E,EAAEsF,IAAF,IAAQnG,iBAAMmH,QAAd,IAAwBtG,EAAEsF,IAAF,KAASnG,iBAAMuH,YAA3C,EAAyD;AACrD1G,mBAAEtB,IAAF,GAAOsB,EAAEtB,IAAT;AACA,qBAAM0U,kBAAOpT,CAAP,IAASsF,MAAKnG,iBAAM0H,IAApB,GAAN;AACA,wBAAO5F,iBAAWoS,EAAX,CAAcD,EAAd,EAAkB1V,MAAlB,CAAyBuD,iBAAWoS,EAAX,CAAcrT,CAAd,CAAzB,CAAP;AACH;AACD,oBAAOiB,iBAAWoS,EAAX,CAAcrT,CAAd,CAAP;AACH,UAXO,EAWLkB,KAXK,EAXyB;;AAwBrC;;;AAxBqC,0BAyBzB,MAAKoS,YAAL,mBAA4B,CAACnU,iBAAM0H,IAAP,EAAY1H,iBAAMoU,QAAlB,EAA2BpU,iBAAMqU,YAAjC,CAA5B,EAA4EtS,KAA5E,EAzByB;;AA2BrC;;;AA3BqC,0BA4BzB,MAAKoS,YAAL,mBAA4B,CAACnU,iBAAMgH,IAAP,EAAYhH,iBAAMmH,QAAlB,EAA2BnH,iBAAMwH,QAAjC,CAA5B,EAAwEzF,KAAxE,EA5ByB;;AA8BrC;;;AA9BqC,0BA+B3B,iBACLP,MADK,CACE;AAAA,oBAAGpB,EAAE+F,IAAF,IAAQnG,iBAAMiH,IAAd,IAAoB7G,EAAE+F,IAAF,KAASnG,iBAAMkH,QAAtC;AAAA,UADF,EAELxG,EAFK,CAEF;AAAA,oBAAG,qBAAYtE,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,qBAAZ,EAAkCmO,EAAlC,CAA5B;AAAA,UAFE,EAGLrJ,KAHK,EA/B2B;;AAoCrC,0BAAUP,MAAV,CAAiB;AAAA,oBAAGpB,EAAE+F,IAAF,IAAQnG,iBAAMoH,KAAjB;AAAA,UAAjB,EACKxH,SADL,CACe,aAAG;AACV,kCAAYxD,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,sBAAZ,EAAmCmO,EAAnC,CAAzB;;AADU,gCAEErL,mBAAQ6G,OAFV;;AAGV,mBAAKrJ,KAAL;AACH,UALL;;AApCqC,oCA2CjB,IAAIiD,aAAJ,EA3CiB;;AAAA;AA4CxC;;AAED;;;;;;;AAvFA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;AAlBA;;;;;;;;;;+BAwMM4S,O,EAAiB;AAAA;;AAAA,iBAAT1T,IAAS,uEAAJ,EAAI;;AACnB,iBAAI,qBAAaK,mBAAQ8G,MAAR,GAAe9G,mBAAQ6G,OAApC,CAAJ,EAAkD;AAC9C,qCAAYxK,iBAAMoI,IAAlB,IAAwBxH,QAAQuE,KAAR,CAAc,2CAAd,CAAxB;AACA,qBAAM+E,IAAI,IAAIzH,OAAJ,CAAY,UAACf,OAAD,EAASC,MAAT;AAAA,4BAAkBA,OAAO,EAACyM,oBAAD,EAAajL,MAAK,EAAC2I,SAAQ,2CAAT,EAAlB,EAAwEtC,KAAI,EAACwN,gBAAD,EAAS1T,UAAT,EAA5E,EAAP,CAAlB;AAAA,kBAAZ,CAAV;AACA;AACA,wBAAO4G,CAAP;AACH;AACD,iBAAI8M,YAAU,SAAd,EAAyB;AACrB1R,wBAAOC,IAAP,iBAAsBC,OAAtB,CAA8B,cAAI;AAC9B,yCAAY5D,KAAZ,CAAkBoV,OAAlB,EAA0B1T,IAA1B,EAA+B0L,EAA/B;AACH,kBAFD;AAGA,wBAAOvM,QAAQf,OAAR,CAAgB,EAAC0M,kBAAD,EAAajL,MAAK,EAAC2I,SAAQ,eAAT,EAAlB,EAAhB,CAAP;AACH;;AAZkB,wCAaY,gCAbZ;AAAA,iBAaZrK,OAbY,wBAaZA,OAbY;AAAA,iBAaJC,OAbI,wBAaJA,OAbI;AAAA,iBAaIC,MAbJ,wBAaIA,MAbJ;;AAenBF,qBAAQC,OAAR,GAAgBA,OAAhB;AACAD,qBAAQE,MAAR,GAAeA,MAAf;AACA;AACA,iBAAM6H,MAAI,2BAAqBwN,OAArB,EAA6B1T,IAA7B,EAAkC7B,OAAlC,CAAV;AACA,iBAAMsV,YAAUvN,IAAIwF,EAApB;AACAvN,qBAAQ+H,GAAR,GAAYA,GAAZ;;AAEA,iBAAKlE,OAAOC,IAAP,iBAAsBR,MAAtB,GAA6B,CAA9B,IAAkC,CAAlC,IAAuC,EAAE,mBAAW,oBAAYpB,mBAAQgH,OAAjC,CAA3C,EAAsF;AAC9E;AAD8E,6BAElF,IAFkF,EAEtEhH,mBAAQgH,OAF8D;;AAGlF,qCAAY3K,iBAAMW,IAAlB,IAAwBC,QAAQC,GAAR,CAAY,uBAAZ,iBAA4CmW,OAA5C,EAAoD1T,IAApD,CAAxB;AACA,mCAAY1B,KAAZ,CAAkBoV,OAAlB,EAA0B1T,IAA1B,EAA+ByT,SAA/B;AACH,cALD,MAKO;AACH,qBAAMjR,OAAK,uBAAiBiR,SAAjB,CAAX;AACA;AACA,sCAAejR,KAAKrE,OAAL,CAAac,IAAb,CAAkB,YAAI;AAAA,iCACjC,MADiC,EACrBoB,mBAAQgH,OADa;;AAEjC,yCAAY/I,KAAZ,CAAkBoV,OAAlB,EAA0B1T,IAA1B,EAA+ByT,SAA/B;AACH,kBAHc,EAGZtT,KAHY,CAGN,YAAI;AACT,yCAAY7B,KAAZ,CAAkBoV,OAAlB,EAA0B1T,IAA1B,EAA+ByT,SAA/B;AACH,kBALc;AAMf;AANA,sBAOK;AAAA,qCACD,IADC,EACWpT,mBAAQgH,OADnB;;AAED,2CAAY/I,KAAZ,CAAkBoV,OAAlB,EAA0B1T,IAA1B,EAA+ByT,SAA/B;AACH;AACJ;;AAED,oBAAOtV,OAAP;AACH;;AAED;;;;;AAyBA;;;;;;AAmBA;;;;;;;;;;;AA8EA;;;;;;sCAMaR,M,EAAO4V,M,EAAQ;AAAA;;AACxB,oBAAO,gBACKzR,MADL,CACY;AAAA,wBAAGyR,OAAOxQ,OAAP,CAAerC,EAAE+F,IAAjB,KAAwB,CAAC,CAA5B;AAAA,cADZ,EAEKzF,EAFL,CAEQ;AAAA,wBAAG,sBAAYtE,iBAAMA,KAAlB,IAAyBY,QAAQC,GAAR,CAAY,0BAAZ,EAAuCmD,EAAEoK,GAAzC,EAA6CpK,EAAE+F,IAA/C,CAA5B;AAAA,cAFR,EAGK1E,OAHL,CAGa,aAAG;AACR,wBAAOK,iBAAWoS,EAAX,CAAcrT,CAAd,CAAP;AACA;AACH,cANL,CAAP;AAOH;AACD;;;;;;;;sCAKatB,I,EAAM;AACf,iBAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AACX,iBAAI,QAAOA,IAAP,yCAAOA,IAAP,eAAuB,EAAvB,CAAJ,EACI,OAAO,KAAKwU,YAAL,CAAkBxU,KAAKiL,GAAvB,CAAP;AACJ,oBAAOjL,KAAK2P,SAAL,CAAe3P,KAAKyU,WAAL,CAAiB,GAAjB,IAAsB,CAArC,CAAP;AACH;;AAED;;;;+BACMM,K,EAAO;AAAA;;AACT,iBAAI,oBAAYvU,mBAAQgH,OAAxB,EAAiC;AAC7B,qBAAIuN,KAAJ,EACI5S,OAAOC,IAAP,iBAAsBC,OAAtB,CAA8B,cAAI;AAC9B,yCAAY5D,KAAZ,CAAkB,SAAlB,EAA4B,EAA5B,EAA+BoN,EAA/B;AACH,kBAFD;;AAFyB,kCAK7B,IAL6B,EAKZ,IALY;;AAAA,2BAM7B,IAN6B,EAMnB,IANmB;;AAAA,6BAO7B,IAP6B,EAOjBrL,mBAAQ6G,OAPS;;AAQ7B;AACH;AACD,iBAAI,oBAAY7G,mBAAQ8G,MAAxB,EAAgC;;AAXvB,yBAYT,IAZS,EAYG9G,mBAAQ8G,MAZX;;AAaT,iCAAYzK,iBAAMW,IAAlB,IAAwBC,QAAQC,GAAR,CAAY,sBAAZ,gBAAxB;AACA,uCAAoBQ,QAApB;AACA,+BAAYF,KAAZ;AACA,kBAAKgX,kBAAL,CAAwBvU,iBAAMgH,IAA9B;AACA,kBAAKuN,kBAAL,CAAwBvU,iBAAM0H,IAA9B;AACA,kBAAK6M,kBAAL,CAAwBvU,iBAAMiH,IAA9B;AACH;;AAED;;;;;;AAgCA;;;;;gCAKc;AACV,iBAAI,UAAK9F,MAAT,EAAiB;AAAA,2BACb,IADa,EACH,CAAC,mDADE;;AAEb,wBAAO,IAAP;AACH;AACD;AACH;;AAED;;;;;;;;kCAKS9D,M,EAAQ;AAAA;;AACb,iBAAI,qBAAa0C,mBAAQiH,IAAR,GAAajH,mBAAQ+G,IAAlC,CAAJ,EAA6C;AAAA,6BACzC,IADyC,EAC7B/G,mBAAQgH,OADqB;;AAEzC1J,wBAAOwU,SAAP,CAAiB;AAAA,4BAAG,EAAE,uBAAa9R,mBAAQqH,KAAR,GAAcrH,mBAAQ6G,OAAtB,GAA8B7G,mBAAQ8G,MAAnD,CAAF,CAAH;AAAA,kBAAjB,EAAmFjH,SAAnF,CACI;AAAA,4BAAG,mBAAWiB,CAAX,CAAH;AAAA,kBADJ,EAEI,YAAI;AAAA,iCACA,MADA,EACYd,mBAAQiH,IADpB;;AAEA,yCAAYzJ,KAAZ;AACH,kBALL,EAMI,YAAI;AAAA,iCACA,MADA,EACYwC,mBAAQiH,IADpB;;AAEA,yCAAYzJ,KAAZ;AACH,kBATL;AAWH;AACJ;;;iCAEM;AAAC;AAAe;;;4BAEpBoI,K,EAAM6O,I,EAAM;AACX,iBAAM5H,2GAAajH,KAAb,EAAmB6O,IAAnB,CAAN;AACA,+CAA4B7O,KAA5B,EAAkC,gCAA0BA,KAA1B,CAAlC;AACA,oBAAOiH,GAAP;AACH;;;0CAEgBjH,K,EAAM6O,I,EAAM;AACzB,iBAAM5H,yHAA2BjH,KAA3B,EAAiC6O,IAAjC,CAAN;AACA,+CAA4B7O,KAA5B,EAAkC,gCAA0BA,KAA1B,CAAlC;AACA,oBAAOiH,GAAP;AACH;;;8BAEIjH,K,EAAM6O,I,EAAM;AACb,iBAAM5H,6GAAejH,KAAf,EAAqB6O,IAArB,CAAN;AACA,+CAA4B7O,KAA5B,EAAkC,gCAA0BA,KAA1B,CAAlC;AACA,oBAAOiH,GAAP;AACH;;AAED;;;;;;AAkBA;;;;;;;;;;AAgBA;uCACqB;AACjB,iBAAI,UAAKzL,MAAT,mBACI,IADJ,EACqB,CAAC,mDADtB,OAEK;AACL,oBAAO,IAAP;AACH;;AAED;;;;uCACsB;AAClB,iBAAI,UAAKA,MAAT,mBACI,IADJ,EACqB,CAAC,mDADtB,OAEK;AACL,oBAAO,IAAP;AACH;;;6BAtIU;AACP;AACH;;AAED;;;;;;;6BAIW;AACP;AACH;;AAED;;;;6BACW;AACP;AACA;AACH;;AAED;;;;6BACa;AACT;AACH;;AAED;;;;;;;6BAIa;AACT;AACH;;;;GA1cgC8R,iBAAOC,Y;;mBAAvBF,O","file":"mikronode.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"util\"), require(\"net\"), require(\"tls\"), require(\"domain\"), require(\"rxjs\"), require(\"core-decorators\"), require(\"crypto\"), require(\"dns\"), require(\"events\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"util\", \"net\", \"tls\", \"domain\", \"rxjs\", \"core-decorators\", \"crypto\", \"dns\", \"events\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MikroNode\"] = factory(require(\"util\"), require(\"net\"), require(\"tls\"), require(\"domain\"), require(\"rxjs\"), require(\"core-decorators\"), require(\"crypto\"), require(\"dns\"), require(\"events\"));\n\telse\n\t\troot[\"MikroNode\"] = factory(root[\"util\"], root[\"net\"], root[\"tls\"], root[\"domain\"], root[\"rxjs\"], root[\"core-decorators\"], root[\"crypto\"], root[\"dns\"], root[\"events\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_25__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f1058be79aa2502fb266","import util from 'util';\nimport net from 'net';\nimport TLS from 'tls';\nimport Promise from 'promise';\nimport {Subject, Observable} from 'rxjs';\nimport {autobind} from 'core-decorators';\nimport crypto from 'crypto';\nimport dns from 'dns';\n\nimport {hexDump, decodePacket, encodeString, objToAPIParams, resultsToObj, getUnwrappedPromise} from './Util.js';\nimport {STRING_TYPE, DEBUG, CONNECTION,CHANNEL,EVENT} from './constants.js';\nimport parser from './parser.js';\n\nimport Connection from './Connection';\n\nconst Socket=net.Socket;\n\nconst nullString=String.fromCharCode(0);\n\n\nclass MikroNode {\n\n    /** Host to connect */\n    @Private\n    host;\n\n    /** Port to connect */\n    @Private\n    port;\n\n    /** Debug Level */\n    @Private\n    debug=DEBUG.NONE;\n\n    /** Timeout for connecting. */\n    @Private\n    timeout;\n\n    /** Socket connected to mikrotik device */\n    @Private\n    sock;\n\n    @Private\n    status=CONNECTION.DISCONNECTED;\n\n    @Private\n    tls=null;\n\n    @Private\n    socketOpts={};\n\n    @Private\n    socketProto='tcp4';\n\n    /** Version of routeros */\n    @Private\n    version = 645;\n/**\n * Creates a MikroNode API object.\n * @exports mikronode\n * @function\n * @static\n * @param {string} host - The host name or ip address\n * @param {number} [port=8728] - Sets the port if not the standard 8728 (8729 for\n *           TLS).\n * @param {number} [timeout=0] - Sets the socket inactivity timeout. A timeout\n *           does not necessarily mean that an error has occurred, especially if you're\n *           only listening for events.\n * @param {(object|boolean)} [options.tls] - Set to true to use TLS for this connection.\n *           Set to an object to use TLS and pass the object to tls.connect as the tls\n *           options. If your device uses self-signed certificates, you'll either have to\n *           set 'rejectUnauthorized : false' or supply the proper CA certificate. See the\n *           options for\n *           {@link https://nodejs.org/api/tls.html#tls_tls_connect_port_host_options_callback|tls.connect()}\n *           for more info.\n * @throws <strong>WARNING: If you do not listen for 'error' or 'timeout' events and one\n *            occurrs during the initial connection (host unreachable, connection refused,\n *            etc.), an \"Unhandled 'error' event\" exception will be thrown.</strong>\n * \n * @example\n * \n * <pre>\n * var MikroNode = require('mikronode');\n * \n * var device1 = new MikroNode('192.168.88.1')\n * var device2 = new MikroNode('192.168.88.2')\n * var promise1 = Observable.fromPromise(device1.connect('admin', 'mypassword'));\n * var promise2 = Observable.fromPromise(device2.connect('admin', 'mypassword'));\n *\n *  // When connected to both servers.\n *  Observable.zip(promise1,promise2).subscribe(function(connections) {\n *      connections[0].closeOnDone(true); // Set close on done for the connection. All channels must be done before this will issue done.\n *      connections[1].closeOnDone(true);\n *      var channel1=connections[0].openChannel(null,true); // choose chanel number for me, close chanel on done.\n *      var channel2=connections[1].openChannel(null,true); // choose chanel number for me, close chanel on done.\n *      // Everything is an observable stream now. Much more powerful\n *      channel1.data.merge(channel2.data).map(function(sentence){ return sentence; // do something cool mapping streams from both devices })\n                .filter(function(sentence){ return sentence.type!='trap'}) // filter out traps. We could split off the stream and handle it somewhere else.\n *              .subscribe(function(sentence){ console.log(sentence)}\n *  }\n * , null\n * , function(err)\n *     console.error('Error when connecting: ', err);\n *   });\n * \n * </pre>\n */\n    constructor(host,port=8728,timeout=5) {\n        // const {debug,port,timeout}=opts;\n        this.host=host;\n        this.port=port;\n        this.timeout=timeout;\n    }\n\n    /** Change debug level **/\n    setDebug(debug) {\n        this.debug=debug;\n        if (this.sock) this.sock.setDebug(debug);\n        if (this.connection) this.connection.setDebug(debug);\n    }\n\n    /** Change the port */\n    setPort(port) {\n        this.port=port;\n    }\n\n    /** get/set tls options for this connection */\n    TLS(opts={}) {\n        if (opts) {\n            this.tls=opts;\n            if (opts.host) this.host=opts.host;\n            if (opts.port) this.port=opts.port;\n            return this;\n        }\n        return this.tls;\n    }\n\n    set socketOpts(opts) {\n        this.socketOpts=opts;\n        if (opts.host) this.host=opts.host;\n        if (opts.port) this.port=opts.port;\n    }\n    /** Set timeout for socket connecion */\n    setTimeout(timeout) {\n        this.timeout=timeout;\n        this.sock.setTimeout(timeout);\n    }\n\n    /** Connect to remote server using ID and password */\n    connect(arg1,arg2) {\n        this.debug>=DEBUG.INFO&&console.log('Connecting to '+this.host);\n\n        let cb;\n        this.debug>=DEBUG.SILLY&&console.log('Creating socket');\n        this.sock = new SocketStream(this.timeout,this.debug,this.tls?typeof this.tls===typeof {}?this.tls:{}:false);\n        const stream=this.sock.getStream();\n\n        if (typeof arg1===typeof {}) {\n            this.socketOpts={...this.socketOpts,arg1};\n            if (typeof arg1===typeof function(){})\n                cb=arg2;\n        } else if (typeof arg1===typeof function(){}) cb=arg1;\n\n        const close=()=>this.sock.getStream().sentence.complete();\n\n        const login=(user,password,cb)=>{\n            this.debug>=DEBUG.DEBUG&&console.log('Logging in');\n            const {promise,resolve,reject}=getUnwrappedPromise();\n\n            if (this.version < 643){\n                stream.write('/login');\n                // Create a connection handler\n                this.connection=new Connection(\n                  {...stream,close},\n                  challenge=>{\n\n                      const md5=crypto.createHash('md5');\n                      md5.update(Buffer.concat([Buffer.from(nullString+password),Buffer.from(challenge)]));\n                      stream.write([\n                          \"/login\",\n                          \"=name=\"+user,\n                          \"=response=00\"+md5.digest(\"hex\")\n                      ]);\n                  },{resolve,reject}\n                );\n            }else{\n                stream.write([\n                    \"/login\",\n                    \"=name=\"+user,\n                    \"=password=\"+password,\n                ]);\n                this.connection=new Connection(\n                  {...stream,close},\n                  challenge=>{\n\n                     debugger\n                  },{resolve,reject}\n                );\n            }\n            this.connection.setDebug(this.debug);\n            promise.then(()=>{\n                if (cb) cb(null,this.connection);\n            },err=>{\n                if (cb) cb(err,null);\n            });\n            return promise;\n        };\n\n        this.debug>=DEBUG.SILLY&&console.log('Creating promise for socket connect');\n        const promise = new Promise((resolve,reject) => {\n            this.debug>=DEBUG.SILLY&&console.log('Connecting to remote host. Detected %s',net.isIPv6(this.host)?'ipv6':net.isIPv4(this.host)?'ipv4':'DNS lookup');\n            const fn=((net.isIPv4(this.host)||net.isIPv6(this.host))?((this.socketOpts.family=net.isIPv6(this.host)?6:4),(a,b)=>b(null,[a])):((this.socketOpts.family==6)?dns.resolve4:dns.resolve6));\n            \n            fn(this.host,(err,data)=>{\n                if (err) {\n                    return reject(\"Host resolve error: \",err);\n                }\n                // this.debug>=DEBUG.DEBUG&&console.log('Socket connect: ',{...this.socketOpts,...this.tls,host:this.host,port:this.port});\n                this.sock.connect({\n                    ...this.socketOpts,\n                    ...this.tls,\n                    host:data[0],\n                    port:this.port\n                }).then(([socketOpts,...args])=>{\n                    this.debug>=DEBUG.DEBUG&&console.log('Connected. Waiting for login.');\n                    // initiate the login process\n                    resolve([login,socketOpts,...args]);\n                    if (cb) cb(null,login,socketOpts,...args);\n                    /* Initiate Login */\n                    this.sock.getStream().sentence.take(1).subscribe(null,reject,null);\n                }).catch(err=>{\n                    if (cb) cb(err,null);\n                    reject(err);\n                });\n                // reject connect promise if the socket throws an error.\n            });\n        });\n        // Connect to the server.\n        return promise;\n    }\n}\n\n// Object.keys(DEBUG).forEach(k=>MikroNode[k]=DEBUG[k]);\nconst api=Object.assign(MikroNode,DEBUG);\nexport default Object.assign(api,{CONNECTION, CHANNEL, EVENT, resultsToObj, getUnwrappedPromise});\n\n/** Handles the socket connection and parsing of infcoming data. */\n/* This entire class is private (not exported) */\nclass SocketStream {\n\n    @Private\n    rawSocket;\n\n    @Private\n    socket;\n\n    @Private\n    status=CONNECTION.NONE;\n\n    @Private\n    debug=DEBUG.NONE;\n\n    @Private\n    sentence$\n\n    @Private\n    parsed$;\n\n    @Private\n    data$;\n\n    constructor(timeout,debug,tls) {\n        debug>=DEBUG.DEBUG&&console.log('SocketStream::new',[timeout,debug]);\n\n        this.debug=debug;\n        this.rawSocket = new Socket();\n\n        this.socket=tls?new TLS.TLSSocket(this.rawSocket,tls):this.rawSocket;\n\n        this.sentence$=new Subject();\n        // Each raw sentence from the stream passes through this parser.\n        let holdBuffer=[];\n        this.parsed$=this.sentence$\n            .do(d=>this.debug>=DEBUG.SILLY&&console.log(\"Data to parse:\",JSON.stringify(d)))\n            .map(o=>o.map(x=>x.split(\"\\r\").join(\"\\\\r\").split(\"\\n\").join(\"\\\\n\")).join('\\n')) // Make array string.\n            .map(d=>{\n                    if (holdBuffer.length) {\n                        console.log(\"Hold buffer:\",holdBuffer);\n                        holdBuffer=[];\n                    }\n                    var s=parser.parse(d);\n                    s.host=this.host;\n                    return s;\n            })\n            .catch(e=>{\n                holdBuffer=[];\n                console.error(\"***************************************************************************\");\n                console.error(\"***************************************************************************\");\n                console.error(\"Error processing sentence:\",e);\n                console.error(\"Skipping and continuing\");\n                console.error(\"***************************************************************************\");\n                console.error(\"***************************************************************************\");\n                return this.parsed$;\n            })\n            .filter(e=>!!e)\n            .flatMap(d=>{\n                Object.keys(d).forEach(k=>{if(typeof d[k]===\"string\")d[k]=d[k].split(\"\\\\r\").join(\"\\r\").split(\"\\\\n\").join(\"\\n\")});\n                return Observable.from(d);\n            }) // break off observable from parse stream.\n            .share(); // parse the string.\n\n        // When we receive data, it is pushed into the stream defined below.\n        this.data$=Observable.fromEvent(this.socket,'data');\n        // this is the stream reader/parser.\n        // My poor stream parser\n        this.data$.scan((/* @type Buffer */ last,/* @type Buffer */stream,i)=>{\n            let buff=Buffer.concat([last,stream]),end=0,idx=0,packet;\n            this.debug>=DEBUG.DEBUG&&console.log(\"Packet received: \",stream.toString().split('\\u0000'));\n            this.debug>=DEBUG.DEBUG&&last.length>0&&console.log(\"Starting parse loop w/existing packet \",last.toString());\n\n            while(idx<buff.length&&(end = buff.indexOf(\"\\u0000\",idx,\"utf8\")) !== -1 ) {\n                this.debug>=DEBUG.SILLY&&console.log(\"Decoding: \",idx,end,buff.length,buff.slice(idx,end));\n                packet=decodePacket(buff.slice(idx,end));\n                idx=end+1;\n                this.debug>=DEBUG.SILLY&&console.log('Detected end of sentence, posting existing sentence',packet);\n                this.sentence$.next(packet);\n            }\n            return idx>=buff.length?Buffer.alloc(0):buff.slice(idx,buff.length);\n        },Buffer.from([]))\n        .subscribe(e=>this.debug>=DEBUG.DEBUG&&e.length&&console.log('Buffer leftover: ',e),this.closeSocket,this.closeSocket);\n\n\n        this.socket.on('end',a => {\n            this.debug>=DEBUG.INFO&&console.log('Connection end '+a);\n            if (this.status==CONNECTION.CONNECTED)\n                // Completing the sentence closes all downstream observables and completes any subscriptions.\n                this.sentence$.complete();\n                // this.handler.close(true);\n        });\n\n        this.socket.on('error',a => {\n            this.debug>=DEBUG.ERROR&&console.log('Connection error: '+a);\n            // Erroring the sentence closes all downstream observables and issues error any subscriptions.\n            this.sentence$.error(a);\n        });\n\n        this.setTimeout(timeout);\n\n        // This will be called if there is no activity to the server.\n        // If this occurs before the login is successful, it could be\n        // that it is a connection timeout.\n        this.socket.setKeepAlive(true); \n        this.b=[];\n        this.len=0;\n        this.line='';\n\n    }\n\n    // This is the function handler for error or complete for the parsing functions.\n    @autobind\n    @Private\n    closeSocket(e){\n        this.debug>=DEBUG.DEBUG&&console.log(\"Closing Socket \",e);\n        e?this.rawSocket.destroy(e):this.rawSocket.destroy();\n    }\n    setDebug(d) {\n        this.debug>=DEBUG.DEBUG&&console.log('SocketStream::setDebug',[d]);\n        this.debug=d;\n    }\n\n    setTimeout(timeout) {\n        this.debug>=DEBUG.DEBUG&&console.log('SocketStream::setTimeout',[timeout]);\n        this.socket.setTimeout(timeout*1000,e=>{ // the socket timed out. According to the NodeJS api docs, right after this, it will be._closed.\n            if (this.status!==CONNECTION.CONNECTED) {\n                this.debug&&console.log('Socket Timeout');\n                this.sentence$.error(\"Timeout: \",JSON.stringify(e));\n                // self.emit('error','Timeout Connecting to host',self);\n            }\n        });\n    }\n\n    /** Connect the socket */\n    connect(socketOpts) {\n        this.debug>=DEBUG.DEBUG&&console.log('SocketStream::Connect %s',this.tls?\"(TLS)\":\"\",socketOpts);\n        this.status=CONNECTION.CONNECTING;\n        this.host = socketOpts.host||'localhost';\n        return new Promise((res,rej)=>{\n        /** Listen for complete on stream to dictate if socket will close */\n        this.sentence$\n            // .do(d=>console.log(\"Sentence: \",d))\n            .subscribe(null,(e)=>{rej(e);this.closeSocket()},this.closeSocket);\n            // Connect to the socket. This works for both TLS and non TLS sockets.\n            try {\n                this.rawSocket.connect(socketOpts,(...args)=>{\n                    this.debug>=DEBUG.INFO&&console.log('SocketStream::Connected ',args,socketOpts);\n                    this.status=CONNECTION.CONNECTED;\n                    socketOpts={\n                        ...socketOpts,\n                        localAddress:this.socket.localAddress,\n                        localPort:this.socket.localPort\n                    };\n                    if (this.socket.encrypted)\n                        res([{\n                            ...socketOpts,\n                            authorized:this.socket.authorized,\n                            authorizationError:this.socket.authorizationError,\n                            protocol: this.socket.getProtocol(),\n                            alpnProtocol:this.socket.alpnProtocol,\n                            npnProtocol:this.socket.npnProtocol,\n                            cipher: this.socket.getCipher(),\n                            cert: this.socket.getPeerCertificate(),\n                        },...args]);\n                    else res([socketOpts,...args]);\n                });\n            } catch (e) {\n                this.debug>=DEBUG.DEBUG&&console.error('Caught exception while opening socket: ',e);\n                rej(e);\n            }\n        });\n    }\n\n    /** Provides access to all of the different stages of input streams and the write stream. */\n    getStream() {\n        return {sentence:this.sentence$,write:this.write,read:this.parsed$,raw:this.data$};\n    }\n\n    @autobind\n    write(data,args) {\n        if (args && typeof(args)===typeof({}))  {\n            this.debug>=DEBUG.SILLY&&console.log(\"Converting obj to args\",args);\n            data=data.concat(Array.isArray(args)?args:objToAPIParams(args,data[0].split('/').pop()));\n        }\n        this.debug>=DEBUG.DEBUG&&console.log('SocketStream::write:',[data]);\n        if (!this.socket||!(this.status&(CONNECTION.CONNECTED|CONNECTION.CONNECTING))) {\n            this.debug>DEBUG.WARN&&console.log('write: not connected ');\n            return;\n        }\n        if (typeof(data)===STRING_TYPE) data=[data];\n        else if (!Array.isArray(data)) return;\n        data.forEach(i => {\n            try {\n                this.debug>=DEBUG.DEBUG&&console.log('SocketStream::write: sending '+i);\n                this.socket.write(encodeString(i,this.debug&DEBUG.SILLY));\n            } catch(error) {\n                this.sentence$.error(error);\n            }\n        });\n        this.socket.write(nullString);\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simple-assign/index.js\n// module id = 2\n// module chunks = 0","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"tls\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tls\"\n// module id = 5\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./core.js');\nrequire('./done.js');\nrequire('./finally.js');\nrequire('./es6-extensions.js');\nrequire('./node-extensions.js');\nrequire('./synchronous.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/index.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._x = 0;\n  this._y = 0;\n  this._z = null;\n  this._A = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._B = null;\nPromise._C = null;\nPromise._D = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._y === 3) {\n    self = self._z;\n  }\n  if (Promise._B) {\n    Promise._B(self);\n  }\n  if (self._y === 0) {\n    if (self._x === 0) {\n      self._x = 1;\n      self._A = deferred;\n      return;\n    }\n    if (self._x === 1) {\n      self._x = 2;\n      self._A = [self._A, deferred];\n      return;\n    }\n    self._A.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._y === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._y === 1) {\n        resolve(deferred.promise, self._z);\n      } else {\n        reject(deferred.promise, self._z);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._z);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._y = 3;\n      self._z = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._y = 1;\n  self._z = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._y = 2;\n  self._z = newValue;\n  if (Promise._C) {\n    Promise._C(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._x === 1) {\n    handle(self, self._A);\n    self._A = null;\n  }\n  if (self._x === 2) {\n    for (var i = 0; i < self._A.length; i++) {\n      handle(self, self._A[i]);\n    }\n    self._A = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 8\n// module chunks = 0","\"use strict\";\n\nvar domain; // The domain module is executed on demand\nvar hasSetImmediate = typeof setImmediate === \"function\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including network IO events in Node.js.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Avoids a function call\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory excaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\nrawAsap.requestFlush = requestFlush;\nfunction requestFlush() {\n    // Ensure flushing is not bound to any domain.\n    // It is not sufficient to exit the domain, because domains exist on a stack.\n    // To execute code outside of any domain, the following dance is necessary.\n    var parentDomain = process.domain;\n    if (parentDomain) {\n        if (!domain) {\n            // Lazy execute the domain module.\n            // Only employed if the user elects to use domains.\n            domain = require(\"domain\");\n        }\n        domain.active = process.domain = null;\n    }\n\n    // `setImmediate` is slower that `process.nextTick`, but `process.nextTick`\n    // cannot handle recursion.\n    // `requestFlush` will only be called recursively from `asap.js`, to resume\n    // flushing after an error is thrown into a domain.\n    // Conveniently, `setImmediate` was introduced in the same version\n    // `process.nextTick` started throwing recursion errors.\n    if (flushing && hasSetImmediate) {\n        setImmediate(flush);\n    } else {\n        process.nextTick(flush);\n    }\n\n    if (parentDomain) {\n        domain.active = process.domain = parentDomain;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/raw.js\n// module id = 9\n// module chunks = 0","module.exports = require(\"domain\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"domain\"\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.done = function (onFulfilled, onRejected) {\n  var self = arguments.length ? this.then.apply(this, arguments) : this;\n  self.then(null, function (err) {\n    setTimeout(function () {\n      throw err;\n    }, 0);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/done.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.prototype.finally = function (f) {\n  return this.then(function (value) {\n    return Promise.resolve(f()).then(function () {\n      return value;\n    });\n  }, function (err) {\n    return Promise.resolve(f()).then(function () {\n      throw err;\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/finally.js\n// module id = 12\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._D);\n  p._y = 1;\n  p._z = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nvar iterableToArray = function (iterable) {\n  if (typeof Array.from === 'function') {\n    // ES2015+, iterables exist\n    iterableToArray = Array.from;\n    return Array.from(iterable);\n  }\n\n  // ES5, only arrays and array-likes exist\n  iterableToArray = function (x) { return Array.prototype.slice.call(x); };\n  return Array.prototype.slice.call(iterable);\n}\n\nPromise.all = function (arr) {\n  var args = iterableToArray(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._y === 3) {\n            val = val._z;\n          }\n          if (val._y === 1) return res(i, val._z);\n          if (val._y === 2) reject(val._z);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nfunction onSettledFulfill(value) {\n  return { status: 'fulfilled', value: value };\n}\nfunction onSettledReject(reason) {\n  return { status: 'rejected', reason: reason };\n}\nfunction mapAllSettled(item) {\n  if(item && (typeof item === 'object' || typeof item === 'function')){\n    if(item instanceof Promise && item.then === Promise.prototype.then){\n      return item.then(onSettledFulfill, onSettledReject);\n    }\n    var then = item.then;\n    if (typeof then === 'function') {\n      return new Promise(then.bind(item)).then(onSettledFulfill, onSettledReject)\n    }\n  }\n\n  return onSettledFulfill(item);\n}\nPromise.allSettled = function (iterable) {\n  return Promise.all(iterableToArray(iterable).map(mapAllSettled));\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    iterableToArray(values).forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\nfunction getAggregateError(errors){\n  if(typeof AggregateError === 'function'){\n    return new AggregateError(errors,'All promises were rejected');\n  }\n\n  var error = new Error('All promises were rejected');\n\n  error.name = 'AggregateError';\n  error.errors = errors;\n\n  return error;\n}\n\nPromise.any = function promiseAny(values) {\n  return new Promise(function(resolve, reject) {\n    var promises = iterableToArray(values);\n    var hasResolved = false;\n    var rejectionReasons = [];\n\n    function resolveOnce(value) {\n      if (!hasResolved) {\n        hasResolved = true;\n        resolve(value);\n      }\n    }\n\n    function rejectionCheck(reason) {\n      rejectionReasons.push(reason);\n\n      if (rejectionReasons.length === promises.length) {\n        reject(getAggregateError(rejectionReasons));\n      }\n    }\n\n    if(promises.length === 0){\n      reject(getAggregateError(rejectionReasons));\n    } else {\n      promises.forEach(function(value){\n        Promise.resolve(value).then(resolveOnce, rejectionCheck);\n      });\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 13\n// module chunks = 0","'use strict';\n\n// This file contains then/promise specific extensions that are only useful\n// for node.js interop\n\nvar Promise = require('./core.js');\nvar asap = require('asap');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nPromise.denodeify = function (fn, argumentCount) {\n  if (\n    typeof argumentCount === 'number' && argumentCount !== Infinity\n  ) {\n    return denodeifyWithCount(fn, argumentCount);\n  } else {\n    return denodeifyWithoutCount(fn);\n  }\n};\n\nvar callbackFn = (\n  'function (err, res) {' +\n  'if (err) { rj(err); } else { rs(res); }' +\n  '}'\n);\nfunction denodeifyWithCount(fn, argumentCount) {\n  var args = [];\n  for (var i = 0; i < argumentCount; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'return new Promise(function (rs, rj) {',\n    'var res = fn.call(',\n    ['self'].concat(args).concat([callbackFn]).join(','),\n    ');',\n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n  return Function(['Promise', 'fn'], body)(Promise, fn);\n}\nfunction denodeifyWithoutCount(fn) {\n  var fnLength = Math.max(fn.length - 1, 3);\n  var args = [];\n  for (var i = 0; i < fnLength; i++) {\n    args.push('a' + i);\n  }\n  var body = [\n    'return function (' + args.join(',') + ') {',\n    'var self = this;',\n    'var args;',\n    'var argLength = arguments.length;',\n    'if (arguments.length > ' + fnLength + ') {',\n    'args = new Array(arguments.length + 1);',\n    'for (var i = 0; i < arguments.length; i++) {',\n    'args[i] = arguments[i];',\n    '}',\n    '}',\n    'return new Promise(function (rs, rj) {',\n    'var cb = ' + callbackFn + ';',\n    'var res;',\n    'switch (argLength) {',\n    args.concat(['extra']).map(function (_, index) {\n      return (\n        'case ' + (index) + ':' +\n        'res = fn.call(' + ['self'].concat(args.slice(0, index)).concat('cb').join(',') + ');' +\n        'break;'\n      );\n    }).join(''),\n    'default:',\n    'args[argLength] = cb;',\n    'res = fn.apply(self, args);',\n    '}',\n    \n    'if (res &&',\n    '(typeof res === \"object\" || typeof res === \"function\") &&',\n    'typeof res.then === \"function\"',\n    ') {rs(res);}',\n    '});',\n    '};'\n  ].join('');\n\n  return Function(\n    ['Promise', 'fn'],\n    body\n  )(Promise, fn);\n}\n\nPromise.nodeify = function (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback =\n      typeof args[args.length - 1] === 'function' ? args.pop() : null;\n    var ctx = this;\n    try {\n      return fn.apply(this, arguments).nodeify(callback, ctx);\n    } catch (ex) {\n      if (callback === null || typeof callback == 'undefined') {\n        return new Promise(function (resolve, reject) {\n          reject(ex);\n        });\n      } else {\n        asap(function () {\n          callback.call(ctx, ex);\n        })\n      }\n    }\n  }\n};\n\nPromise.prototype.nodeify = function (callback, ctx) {\n  if (typeof callback != 'function') return this;\n\n  this.then(function (value) {\n    asap(function () {\n      callback.call(ctx, null, value);\n    });\n  }, function (err) {\n    asap(function () {\n      callback.call(ctx, err);\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/node-extensions.js\n// module id = 14\n// module chunks = 0","\"use strict\";\n\nvar rawAsap = require(\"./raw\");\nvar freeTasks = [];\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with\n * priority over IO events. An exception thrown in a task can be handled by\n * `process.on(\"uncaughtException\") or `domain.on(\"error\")`, but will otherwise\n * crash the process. If the error is handled, all subsequent tasks will\n * resume.\n *\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawTask.domain = process.domain;\n    rawAsap(rawTask);\n}\n\nfunction RawTask() {\n    this.task = null;\n    this.domain = null;\n}\n\nRawTask.prototype.call = function () {\n    if (this.domain) {\n        this.domain.enter();\n    }\n    var threw = true;\n    try {\n        this.task.call();\n        threw = false;\n        // If the task throws an exception (presumably) Node.js restores the\n        // domain stack for the next event.\n        if (this.domain) {\n            this.domain.exit();\n        }\n    } finally {\n        // We use try/finally and a threw flag to avoid messing up stack traces\n        // when we catch and release errors.\n        if (threw) {\n            // In Node.js, uncaught exceptions are considered fatal errors.\n            // Re-throw them to interrupt flushing!\n            // Ensure that flushing continues if an uncaught exception is\n            // suppressed listening process.on(\"uncaughtException\") or\n            // domain.on(\"error\").\n            rawAsap.requestFlush();\n        }\n        // If the task threw an error, we do not want to exit the domain here.\n        // Exiting the domain would prevent the domain from catching the error.\n        this.task = null;\n        this.domain = null;\n        freeTasks.push(this);\n    }\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/asap.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\nPromise.enableSynchronous = function () {\n  Promise.prototype.isPending = function() {\n    return this.getState() == 0;\n  };\n\n  Promise.prototype.isFulfilled = function() {\n    return this.getState() == 1;\n  };\n\n  Promise.prototype.isRejected = function() {\n    return this.getState() == 2;\n  };\n\n  Promise.prototype.getValue = function () {\n    if (this._y === 3) {\n      return this._z.getValue();\n    }\n\n    if (!this.isFulfilled()) {\n      throw new Error('Cannot get a value of an unfulfilled promise.');\n    }\n\n    return this._z;\n  };\n\n  Promise.prototype.getReason = function () {\n    if (this._y === 3) {\n      return this._z.getReason();\n    }\n\n    if (!this.isRejected()) {\n      throw new Error('Cannot get a rejection reason of a non-rejected promise.');\n    }\n\n    return this._z;\n  };\n\n  Promise.prototype.getState = function () {\n    if (this._y === 3) {\n      return this._z.getState();\n    }\n    if (this._y === -1 || this._y === -2) {\n      return 0;\n    }\n\n    return this._y;\n  };\n};\n\nPromise.disableSynchronous = function() {\n  Promise.prototype.isPending = undefined;\n  Promise.prototype.isFulfilled = undefined;\n  Promise.prototype.isRejected = undefined;\n  Promise.prototype.getValue = undefined;\n  Promise.prototype.getReason = undefined;\n  Promise.prototype.getState = undefined;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/synchronous.js\n// module id = 16\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 17\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core-decorators\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"dns\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dns\"\n// module id = 20\n// module chunks = 0","function encodeString(s,d) {\n    var data = null;\n    var len = Buffer.byteLength(s);\n    var offset=0;\n\n    if (len < 0x80) {\n            data=new Buffer(len+1);\n            data[offset++]=len;\n    } else \n    if (len < 0x4000) {\n            data=new Buffer(len+2);\n            len |= 0x8000;\n            data[offset++]=(len >> 8) & 0xff;\n            data[offset++]=len & 0xff;\n    } else\n    if (len < 0x200000) {\n            data=new Buffer(len+3);\n            len |= 0xC00000;\n            data[offset++]=(len >> 16) & 0xff;\n            data[offset++]=(len >> 8) & 0xff;\n            data[offset++]=len & 0xff;\n    } else\n    if (len < 0x10000000) {\n            data=new Buffer(len+4);\n            len |= 0xE0000000;\n            data[offset++]=(len >> 24) & 0xff;\n            data[offset++]=(len >> 16) & 0xff;\n            data[offset++]=(len >> 8) & 0xff;\n            data[offset++]=len & 0xff;\n    } else {\n        data=new Buffer(len+5);\n        data[offset++]=0xF0;\n        data[offset++]=(len >> 24) & 0xff;\n        data[offset++]=(len >> 16) & 0xff;\n        data[offset++]=(len >> 8) & 0xff;\n        data[offset++]=len & 0xff;\n    }\n    data.utf8Write(s,offset);\n    d&&console.log(\"Writing \",data);\n    return data;\n}\n\nfunction decodePacket(data){\n    if (!data.length) return [];\n    const buf=[];\n    let idx=0;\n    while (idx<data.length) {\n        let len;\n        let b=data[idx++];\n        if (b&128) { // Ported from the PHP API on the Wiki. Thanks\n            if ((b&192)==128) {\n                len=((b&63)<<8)+data[idx++];\n            } else {\n                if ((b & 224) == 192) {\n                    len = ((b & 31) << 8 ) + data[idx++];\n                    len = (len << 8 ) + data[idx++];\n                } else {\n                    if ((b & 240) == 224) {\n                        len = ((b & 15) << 8 ) + data[idx++];\n                        len = (len << 8 ) + data[idx++];\n                        len = (len << 8 ) + data[idx++];\n                    } else {\n                        len = data[idx++];\n                        len = (len << 8 ) + data[idx++];\n                        len = (len << 8 ) + data[idx++];\n                        len = (len << 8 ) + data[idx++];\n                    }\n                }\n            }\n        } else {\n            len=b;\n        } \n        // console.log(\"Pushing \",idx,len,data.slice(idx,idx+len));\n        buf.push(data.slice(idx,idx+len).toString('utf8'));\n        idx+=len;\n    }\n    return buf;\n}\n//hexDump=require('./hexdump');\nfunction hexDump(data) {\n    var hex=[]\n    var cref=[];\n    var i=0,j=0;\n    for (j=0;j<data.length;j++) {\n        i=j%8;\n        //m=ctrl.indexOf(data[j]);\n        if (data[j]<20||data[j]>126) cref[i]='.';\n        else cref[i]=String.fromCharCode(data[j])\n        hex[i]=Number(data[j]).toString(16);\n        while (hex[i].length < 2) hex[i] = \"0\" + hex[i];\n        if (hex.length==8) {\n            console.log(\"%d: %s    %s\",j-7,hex.join(' '),cref.join('') );\n            hex=[];\n            cref=[];\n        }\n    }\n    if (i!=8) {\n        console.log(hex.join(' ')+'    '+ cref.join('') )\n        hex=[];\n        cref=[];\n    }\n}\n\n// This is probably over done...\n// Uncomment if you want to detail trace your promises.\nfunction nullfunc(){}\nconst rejectionWatcher=new WeakMap();\n\n// function clearRejectionTrack(catcher,reason) {\n//     const x=rejectionWatcher.get(this);\n//     x.splice(x.findIndex(catcher),1);\n//     return catcher.call(this,reason);\n// }\n\n// function proxyThenCatch(promise) {\n//     const catchEx = promise.catch;\n//     const thenEx = promise.then;\n    \n//     console.log(\"Adding promise to watcher map\");\n//     // rejectionWatcher.set(promise,[]);\n\n//     promise.then=function(handler,catcher) {\n//         if (catcher) {\n//             // rejectionWatcher.get(promise).push(catcher);\n//             console.log(\"tracking catcher\");\n//         }\n//         return proxyThenCatch(thenEx.call(promise,handler,clearRejectionTrack.bind(promise,catcher)));\n//     }.bind(promise);\n\n//     promise.catch=function(catcher) {\n//         if (!catcher) return;\n//         // rejectionWatcher.get(promise).push(catcher);\n//         return proxyThenCatch(catchEx.call(promise,catcher));\n//     }.bind(promise);\n//     return promise;\n// }\n\nprocess.on('unhandledRejection',function(event,promise){\n    if (event.cmd) return;\n    //     console.log(\"caught unhandled rejection. Command still running...\");\n    //     rejectionWatcher.set(promise,event);\n    // } else\n        console.error(\"Unhandled rejection: \",JSON.stringify(event,true,4),'\\n',promise);\n});\n\n// process.on('rejectionHandled',function(p){\n//     console.log('Rejection handled.');\n//     rejectionWatcher.delete(p);\n// });\n\nfunction getUnwrappedPromise() {\n    let resolve,reject;\n    const e = new Error();\n    const promise = new Promise((res,rej)=>{\n        resolve=res;\n        reject=rej;\n    });\n    promise.createdAt=e.stack.split('\\n').slice(2,3).join('\\n');\n    return {\n        get promise() {\n            return promise;\n        }\n      , resolve:function(...args) {\n          if (resolve===nullfunc) return;\n        //   const e = new Error();\n        //   console.log(\"Resolving promise\",promise);\n        //   console.log(e.stack.split('\\n').slice(2).join('\\n'))\n          reject=nullfunc;\n          const r=resolve(...args);\n          resolve=nullfunc;return r;\n        }\n      , reject:function(...args) {\n          if (reject===nullfunc) return;\n        //   const e = new Error();\n        //   console.log(\"Rejecting promise\",promise);\n        //   console.log(e.stack.split('\\n').slice(2).join('\\n'))\n          resolve=nullfunc;\n          const r=reject(...args);\n          reject=nullfunc;\n          return r;\n        }\n    };\n}\n\nfunction objToAPIParams(obj,type) {\n    const prefix=type==='print'?'':'=';\n    return Object.keys(obj)\n        .map(k=>obj[k]?`${prefix}${k}=${obj[k]}`:`${prefix}${k}`);\n}\n\nfunction resultsToObj(r) {\n    if (r.type) {\n        if(Array.isArray(r.data)) return resultsToObj(r.data);\n        return [];\n    }\n    if (r.length&&Array.isArray(r[0])) return r.map(resultsToObj);\n    if (!Array.isArray(r)) return {};\n    return r.reduce((p,f)=>{p[f.field]=f.value;return p},{});\n}\nexport {hexDump, decodePacket, encodeString, objToAPIParams, resultsToObj,getUnwrappedPromise};\n\n\n// WEBPACK FOOTER //\n// ./src/Util.js","\n\nconst STRING_TYPE=typeof \"\";\n\nconst DEBUG = {\n    NONE:0\n  , ERROR:1\n  , WARN:2\n  , INFO:4\n  , DEBUG:8\n  , SILLY:16\n};\n\nconst connectionLabels = {\n    DISCONNECTED:\"Disconnected\" // Disconnected from device\n  , ERROR:\"Error\" // ERROR defined above means a connect or transport error.\n  , CONNECTING:\"Connecting\"   // Connecting to device\n  , CONNECTED:\"Connected\"    // Connected and idle\n  , WAITING:\"Waiting\"      // Waiting for response(s)\n  , CLOSING:\"Closing\" \n  , CLOSED:\"Closed\" \n};\n\nconst CONNECTION = {\n    DISCONNECTED:0\n  , CONNECTING:1\n  , CONNECTED:2\n  , WAITING:4\n  , CLOSING:8\n  , CLOSED:16\n  , ERROR: 32\n};\n\nconst CHANNEL = {\n    NONE:0\n  , OPEN : 1\n  , CLOSED : 2\n  , CLOSING : 4\n  , RUNNING : 8\n  , DONE:16\n};\nconst EVENT = {\n    TRAP: 'trap'\n  , TRAP_TAG: 'trap_tag'\n  , DONE: 'done'\n  , DONE_RET: 'done_ret'\n  , FATAL: 'fatal'\n  , FATAL_TAG: 'fatal_tag'\n  , TAG: 'tag'\n  , DONE_RET_TAG: 'done_ret_tag'\n  , DONE_TAG: 'done_tag'\n  , RE: 're'\n  , DATA: 'data'  // This is an artifical event, not one from the API\n};\n\nexport {STRING_TYPE, DEBUG, CONNECTION, CHANNEL, EVENT, connectionLabels};\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(p) { return p },\n      peg$c1 = function(tag, data) { return {type: \"data\", data:data, tag:tag} },\n      peg$c2 = function(tag) { return {type: \"re\", tag:tag} },\n      peg$c3 = function(data, tag) { return {type: \"data\", data:data, tag:tag} },\n      peg$c4 = function(data) { return {type: \"data\", data:data} },\n      peg$c5 = function(re) { return {type: \"re\"} },\n      peg$c6 = function(e) {return e},\n      peg$c7 = \"!re\",\n      peg$c8 = peg$literalExpectation(\"!re\", false),\n      peg$c9 = function() { return \"\"},\n      peg$c10 = function(id, value) { return {field:id, value:value}},\n      peg$c11 = \"=\",\n      peg$c12 = peg$literalExpectation(\"=\", false),\n      peg$c13 = /^[.a-zA-Z\\-0-9]/,\n      peg$c14 = peg$classExpectation([\".\", [\"a\", \"z\"], [\"A\", \"Z\"], \"-\", [\"0\", \"9\"]], false, false),\n      peg$c15 = function(id) {return id.join('')},\n      peg$c16 = /^[^\\r\\n\\0]/,\n      peg$c17 = peg$classExpectation([\"\\r\", \"\\n\", \"\\0\"], true, false),\n      peg$c18 = function(v) {return v.join('')},\n      peg$c19 = /^[\\r\\n\\0]/,\n      peg$c20 = peg$classExpectation([\"\\r\", \"\\n\", \"\\0\"], false, false),\n      peg$c21 = function(v) {return ''},\n      peg$c22 = function(f) {return {type: \"fatal\", data:f } },\n      peg$c23 = function(t) {return t},\n      peg$c24 = \"!done\",\n      peg$c25 = peg$literalExpectation(\"!done\", false),\n      peg$c26 = \"=ret=\",\n      peg$c27 = peg$literalExpectation(\"=ret=\", false),\n      peg$c28 = peg$anyExpectation(),\n      peg$c29 = function(ret) {return {type: \"done_ret\", data:ret.join('')}},\n      peg$c30 = function(tag, ret) {return {type: \"done_ret\", tag:tag, data:ret.join('')}},\n      peg$c31 = function(tag) {return {type: \"done_ret\", tag:tag}},\n      peg$c32 = function() {return {type: \"done\" }},\n      peg$c33 = function(tag) {return {type: \"tag\", tag:tag }},\n      peg$c34 = \".tag=\",\n      peg$c35 = peg$literalExpectation(\".tag=\", false),\n      peg$c36 = /^[a-zA-Z_\\-0-9]/,\n      peg$c37 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\", \"-\", [\"0\", \"9\"]], false, false),\n      peg$c38 = /^[0-9]/,\n      peg$c39 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c40 = function(id, subid) {return id.join('')+\":\"+subid.join('')},\n      peg$c41 = \"!trap\",\n      peg$c42 = peg$literalExpectation(\"!trap\", false),\n      peg$c43 = function(tag, d) { return {type:\"trap\", tag:tag, data:d} },\n      peg$c44 = function(d) { return {type:\"trap\", data:d} },\n      peg$c45 = \"!fatal\",\n      peg$c46 = peg$literalExpectation(\"!fatal\", false),\n      peg$c47 = function(v) {return v},\n      peg$c48 = /^[ \\t\\r\\n\\f\\0x00]/,\n      peg$c49 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\", \"\\f\", \"\\0\", \"x\", \"0\", \"0\"], false, false),\n      peg$c50 = function() {return \"\"},\n      peg$c51 = /^[^ \\t\\r\\n\\f\\0x00]/,\n      peg$c52 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\", \"\\f\", \"\\0\", \"x\", \"0\", \"0\"], true, false),\n      peg$c53 = /^[\\0x00]/,\n      peg$c54 = peg$classExpectation([\"\\0\", \"x\", \"0\", \"0\"], false, false),\n      peg$c55 = /^[:]/,\n      peg$c56 = peg$classExpectation([\":\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parses();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsepacket();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsepacket();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenull();\n    }\n\n    return s0;\n  }\n\n  function peg$parsepacket() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsere();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parses();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetag();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedata();\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parsedata();\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s3, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsere();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parses();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetag();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsere();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parses();\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parsedata();\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parsedata();\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetag();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c3(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsere();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parses();\n            if (s2 !== peg$FAILED) {\n              s3 = [];\n              s4 = peg$parsedata();\n              if (s4 !== peg$FAILED) {\n                while (s4 !== peg$FAILED) {\n                  s3.push(s4);\n                  s4 = peg$parsedata();\n                }\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c4(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsere();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parses();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseend();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parses();\n                if (s2 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c6(s1);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsere() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsedata() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsevalue();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parses();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c10(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c13.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c13.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c11;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c12); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c15(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c16.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c17); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c16.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c19.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c21(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseend() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefatal();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsetrap();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c23(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5) === peg$c24) {\n          s1 = peg$c24;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c25); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parses();\n          if (s2 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 5) === peg$c26) {\n              s3 = peg$c26;\n              peg$currPos += 5;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c28); }\n              }\n              if (s5 !== peg$FAILED) {\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  if (input.length > peg$currPos) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                  }\n                }\n              } else {\n                s4 = peg$FAILED;\n              }\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c29(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5) === peg$c24) {\n            s1 = peg$c24;\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c25); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parses();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsetag();\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parses();\n                if (s4 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c26) {\n                    s5 = peg$c26;\n                    peg$currPos += 5;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c27); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    if (input.length > peg$currPos) {\n                      s7 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s7 !== peg$FAILED) {\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        if (input.length > peg$currPos) {\n                          s7 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s7 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                        }\n                      }\n                    } else {\n                      s6 = peg$FAILED;\n                    }\n                    if (s6 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c30(s3, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 5) === peg$c24) {\n              s1 = peg$c24;\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c25); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parses();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsetag();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c31(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 5) === peg$c24) {\n                s1 = peg$c24;\n                peg$currPos += 5;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c25); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c32();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsetag();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c33(s1);\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c36.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecolon();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          if (peg$c38.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              if (peg$c38.test(input.charAt(peg$currPos))) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c39); }\n              }\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parses();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c40(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c34) {\n        s1 = peg$c34;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c36.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c36.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parses();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetrap() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parses();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetag();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parses();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parsedata();\n            if (s6 !== peg$FAILED) {\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsedata();\n              }\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c43(s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c41) {\n        s1 = peg$c41;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parses();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parsedata();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parsedata();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c44(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefatal() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parses();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsevalue();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c47(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parses() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c48.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c50();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsens() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenull() {\n    var s0;\n\n    if (peg$c53.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecolon() {\n    var s0;\n\n    if (peg$c55.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/parser.js","import util from 'util';\nimport events from 'events';\nimport {Subject, Observable} from 'rxjs';\nimport {autobind} from 'core-decorators';\nimport {STRING_TYPE, DEBUG, CONNECTION, CHANNEL, EVENT} from './constants.js';\nimport Channel from './Channel';\n\nexport default class Connection extends events.EventEmitter {\n\n    @Private\n    status=CONNECTION.NONE;\n\n    @Private\n    channels=[];\n\n    @Private\n    stream;\n\n    @Private\n    debug=DEBUG.NONE;\n\n    @Private\n    closeOnDone=false;\n\n    constructor(stream,loginHandler,p) {\n        super();\n        const login=stream.read\n            // .do(d=>console.log(\"Sentence: \",d))\n            .takeWhile(o=>this.status!==CONNECTION.CONNECTED).share();\n\n        this.stream=stream;\n\n        const rejectAndClose = d=>{\n            p.reject(d);\n            this.close();\n        };\n\n        login.filter(d=>d.type===EVENT.TRAP)\n             .do(t=> {\n                this.emit('trap',t.data)\n                this.debug&&console.log('Trap during login: ',t.data);\n              }).map(t=>t.data)\n             .subscribe(rejectAndClose,rejectAndClose);\n\n        login.filter(d=>d.type===EVENT.DONE_RET)\n             .subscribe(data=>{\n                this.status=CONNECTION.CONNECTING;\n                this.debug>=DEBUG.DEBUG&&console.log(\"Got done_ret, building response to \",data);\n                var a=data.data.split('');\n                var challenge=[];\n                while(a.length) challenge.push(parseInt(\"0x\"+a.shift()+a.shift()));\n                this.debug>=DEBUG.DEBUG&&console.log('Challenge length:'+challenge.length);\n                if (challenge.length!=16) {\n                    this.status=CONNECTION.ERROR;\n                    this.debug>=DEBUG.WARN&&console.log(this.status);\n                    stream.sentence.error('Bad Connection Response: '+data);\n                } else {\n                    loginHandler(challenge);\n                }\n             });\n\n        login.filter(d=>d.type===EVENT.DONE)\n             .subscribe(d=>{\n                this.status=CONNECTION.CONNECTED;\n                this.debug>=DEBUG.INFO&&console.log('Login complete: Connected');\n                p.resolve(this);\n              },\n              rejectAndClose,\n              ()=>{\n                this.debug>=DEBUG.DEBUG&&console.log(\"Login stream complete\");\n              }\n             );\n\n        stream.read\n        .subscribe(null,null,e=>{\n          this.channels.forEach(c=>c.close(true));\n          setTimeout(()=>{\n            this.emit('close',this);\n          },50)\n        });\n    }\n\n    close() {\n      this.debug>=DEBUG.SILLY&&console.log(\"Closing connection through stream\");\n      this.emit('close',this);\n      this.stream.close();\n    }\n\n    /*\n     * @deprecated use debug(level)\n     */\n    setDebug(d) {\n      this.debug=d;\n      return this;\n    }\n\n    debug(...args) {\n      if (args.length) \n        this.debug=args[0];\n      else return this.debug;\n      return this;\n    }\n\n    /** If all channels are closed, close this connection */\n    closeOnDone(...args) {\n      if (args.length) \n        this.closeOnDone=!!args[0];\n      else return this.closeOnDone;\n      return this;\n    }\n\n    getChannel(id) {\n      return this.channels.filter(c=>c.getId()==id)[0];\n    }\n\n    get connected() {\n      return !!(this.status&(CONNECTION.CONNECTED|CONNECTION.WAITING|CONNECTION.CLOSING));\n    }\n    @autobind\n    openChannel(id,closeOnDone) {\n        this.debug>=DEBUG.SILLY&&console.log(\"Connection::OpenChannel\");\n        if (!id) {\n            id=+(new Date());\n        } else {\n            if (this.channels.some(c=>c.getId()===id)) throw('Channel already exists for ID '+id);\n        }\n        this.debug>=DEBUG.SILLY&&console.log(\"Creating proxy stream\");\n        const matchId=RegExp(\"^\"+id+\"-\");\n        let s = {\n          \"read\": this.stream.read\n                      .filter(e=>matchId.test(e.tag)),\n          \"write\": (d,args,cmdTrack=0) => {\n              if (typeof(d)===STRING_TYPE)\n                d=d.split(\"\\n\");\n              if (Array.isArray(d)&&d.length) {\n                d.push(`.tag=${id}-${cmdTrack}`);\n                return this.stream.write(d,args);\n              }\n              else return;\n          },\n          \"close\": ()=>{\n              var channel=this.getChannel(id);\n              if (channel) {\n                this.debug>=DEBUG.DEBUG&&console.log(\"Closing channel \",id);\n                setTimeout(channel.emit.bind(channel,'close',channel),50);\n                this.channels.splice(this.channels.indexOf(channel),1);\n                if (this.channels.filter(c=>c.status&(CHANNEL.OPEN|CHANNEL.RUNNING)).length===0 && this.closeOnDone) this.close(); \n              } else\n                this.debug>=DEBUG.WARN&&console.log(\"Could not find channel %s when trying to close\",id);\n          },\n          \"done\": ()=>{\n              // If Connection closeOnDone, then check if all channels are done.\n              if (this.closeOnDone) {\n                  const cl=this.channels.filter(c=>c.status&(CHANNEL.OPEN|CHANNEL.RUNNING));\n                  if (cl.length) return false;\n                  this.debug>=DEBUG.DEBUG&&console.log(\"Channel done (%s)\",id);\n                  this.channels.filter(c=>c.status&(CHANNEL.DONE)).forEach(c=>console.log(\"Closing...\",c));\n                  return true;\n              }\n              return false;\n          }\n        };\n        var c;\n        this.debug>=DEBUG.INFO&&console.log(\"Creating channel \",id);\n        this.channels.push((c=new Channel(id,s,this.debug,closeOnDone)));\n        this.debug>=DEBUG.INFO&&console.log(\"Channel %s Created\",id);\n        return  c;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Connection.js","module.exports = require(\"events\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"events\"\n// module id = 25\n// module chunks = 0","import util from 'util';\nimport events from 'events';\nimport {Observable, Subject, Scheduler} from 'rxjs';\nimport {DEBUG, CONNECTION, CHANNEL, EVENT} from './constants.js';\nimport {resultsToObj,getUnwrappedPromise} from './Util.js';\n// console.log2=console.log;\n// console.log=function(...args) {\n//     const stack=new Error().stack.split('\\n');\n//     const file = (stack[2].match(/\\(([^:]+:\\d+)/)||['',''])[1].split(\"/\").pop()+\": \"+typeof args[0]===\"string\"?args.shift():'';\n//     console.log2(file,...args);\n// }\n\nexport default class Channel extends events.EventEmitter {\n\n    /** ID of the channel. \n     * @private\n     * @instance\n     * @member {boolean} id\n     * @memberof Channel\n    **/\n    @Private\n    id;\n\n    /** Current channel status. See Constants for list of channel status (CHANNEL)\n     * @private\n     * @instance\n     * @member {boolean} id\n     * @memberof Channel\n    **/\n    @Private\n    status=CHANNEL.OPEN;\n\n    /** ID of the channel. \n     * @private\n     * @instance\n     * @member {boolean} id\n     * @memberof Channel\n    **/\n    @Private\n    closed=false;\n\n    /** In/Out stream object for this channel.\n     * @private\n     * @instance\n     * @member {Object} stream\n     * @memberof Channel\n    **/\n    @Private\n    stream;\n\n    /** Current Debug level for this channel.\n     * @private\n     * @instance\n     * @member {int} debug\n     * @memberof Channel\n    **/\n    @Private\n    debug=DEBUG.NONE;\n\n    /** If whether to call close on this channel when done event occurs, and there are no commands in the queue to run.\n     * @private\n     * @instance\n     * @member {boolean} closeOnDone\n     * @memberof Channel\n    **/\n    @Private\n    closeOnDone=true;\n\n    /** If wether to call close on this channel when trap event occurs.\n     * @private\n     * @instance\n     * @member {boolean} closeOnTrap\n     * @memberof Channel\n    **/\n    @Private\n    closeOnTrap=false;\n\n    /** The buffered stream. Used to hold all results until done or trap events occur.\n     * @private\n     * @instance\n     * @member {Observable} bufferedStream\n     * @memberof Channel\n    **/\n    @Private\n    bufferedStream;\n\n    /** \"data stream\" for this channel. no other sentences execpt data sentences get to this point.\n     * @private\n     * @instance\n     * @member {Observable} data\n     * @memberof Channel\n    **/\n    @Private\n    data;\n\n    /** contains all sentences for this stream\n     * @private\n     * @instance\n     * @member {Observable} read\n     * @memberof Channel\n    **/\n    @Private\n    read;\n\n    /** Trap stream\n     * @private\n     * @instance\n     * @member {Observable} trap\n     * @memberof Channel\n    **/\n    @Private\n    trap;\n\n    /** write stream\n     * @private\n     * @instance\n     * @member {Subject} write\n     * @memberof Channel\n    **/\n    @Private\n    write=new Subject();\n\n    /** If commands should be synchronous.\n     * @private\n     * @instance\n     * @member {boolean} sync\n     * @memberof Channel\n    **/\n    @Private\n    sync=true;\n\n    /** Data buffer per command execution\n     * @private\n     * @instance\n     * @member {Object} buffer\n     * @memberof Channel\n    **/\n    @Private\n    dataBuffer = {};\n\n    /** Command buffer. All output commands go through this buffer.\n     * @private\n     * @instance\n     * @member {Array} buffer\n     * @memberof Channel\n     */\n    @Private\n    buffer = [];\n\n    @Private\n    cmdCount = 0;\n\n    /**\n      * Command ID tracking.\n      * @private\n      * @instance\n      * @member {Object}\n      * @memberof Channel\n      */\n    @Private\n    cmd = {};\n\n    @Private\n    done;\n    /** \n      * Create new channel on a connection. This should not be called manually. Use Connection.openChannel\n      * @constructor\n      * @param {string|number} id ID of the channel\n      * @param {object} stream stream object representing link to connection.\n      * @param {number} debug The debug level.\n      * @param {boolean} closeOnDone If the channel should close itself when the next done event occurs, and there are no more commands to run.\n      */\n    constructor(id,stream,debug,closeOnDone) {\n        super();\n        this.debug=debug;\n        this.debug&DEBUG.SILLY&&console.log('Channel::New',[].slice.call(arguments));\n        this.closeOnDone=(typeof closeOnDone===typeof true)?closeOnDone:this.closeOnDone;\n        this.id=id; // hold a copy.\n\n        if(this.status&(CHANNEL.CLOSING|CHANNEL.CLOSED)) return; // catch bad status\n\n        this.stream = stream; // Hold a copy\n        // Stream for reading everything.\n        this.read = stream.read.takeWhile(data=>!(this.status&CHANNEL.CLOSED))\n            .do(e=>this.debug>=DEBUG.SILLY&&console.log('Channel (%s)::%s Sentence on channel ',e.tag))\n            .flatMap(data=>{\n                const cmd=this.getCommandId(data);\n                const d={...data,tag:data.tag.substring(0,data.tag.lastIndexOf('-')),cmd:(this.getCommand(cmd)||{cmd:null}).cmd};\n                if (d.type==EVENT.DONE_RET||d.type===EVENT.DONE_RET_TAG) {\n                    d.data=d.data;\n                    const d2={...d,type:EVENT.DATA};\n                    return Observable.of(d2).concat(Observable.of(d));\n                }\n                return Observable.of(d);\n            }).share();\n\n        // Stream for sentences with data.\n        this.data = this.createStream(this.read,[EVENT.DATA,EVENT.DATA_RET,EVENT.DATA_RET_TAG]).share();\n\n        // Stream for signaling when done.\n        this.done = this.createStream(this.read,[EVENT.DONE,EVENT.DONE_RET,EVENT.DONE_TAG]).share();\n\n        // Stream for all traps from device.\n        this.trap=this.read\n            .filter(e=>e.type==EVENT.TRAP||e.type===EVENT.TRAP_TAG)\n            .do(e=>this.debug>=DEBUG.DEBUG&&console.log('Channel (%s)::TRAP ',id))\n            .share();\n\n        this.read.filter(e=>e.type==EVENT.FATAL)\n            .subscribe(e=>{\n                this.debug>=DEBUG.DEBUG&&console.log('Channel (%s)::FATAL ',id);\n                this.status=CHANNEL.CLOSING;\n                this.close();\n            });\n\n        this.bufferedStream=new Subject();\n    }\n\n    /**\n     * \n     * @param {string} command The command to write to the device on this channel.\n     * @param {*} args Arguments to pass as part of the command.\n     */\n    write(command,args=[]) {\n        if (this.status&(CHANNEL.CLOSED|CHANNEL.CLOSING)) {\n            this.debug>=DEBUG.WARN&&console.error(\"Cannot write on closed or closing channel\");\n            const p = new Promise((resolve,reject)=>reject({tag:this.id,data:{message:\"Cannot write on closed or closing channel\"},cmd:{command,args}}));\n            // p.catch(e=>{console.error(e.data.message)});\n            return p;\n        }\n        if (command==='/cancel') {\n            Object.keys(this.cmd).forEach(id=>{\n                this.stream.write(command,args,id);\n            });\n            return Promise.resolve({tag:this.id,data:{message:\"/cancel sent.\"}});\n        }\n        const {promise,resolve,reject}=getUnwrappedPromise();\n\n        promise.resolve=resolve;\n        promise.reject=reject;\n        // Add the command to the registry.\n        const cmd=this.registerCommand(command,args,promise);\n        const commandId=cmd.id;\n        promise.cmd=cmd;\n\n        if ((Object.keys(this.cmd).length-1)==0 && !(this.sync&&this.status&CHANNEL.RUNNING)) {\n                // console.log(\"There are no commands in the buffer, but channel is in running state while sync enabled.\");\n            this.status=CHANNEL.RUNNING;\n            this.debug>=DEBUG.INFO&&console.log(\"Writing on channel %s\",this.id,command,args);\n            this.stream.write(command,args,commandId);\n        } else {\n            const last=this.lastCommand(commandId);\n            // If we are in sync mode, wait until the command is complete\n            if (this.sync) last.promise.then(()=>{\n                this.status=CHANNEL.RUNNING;\n                this.stream.write(command,args,commandId);\n            }).catch(()=>{\n                this.stream.write(command,args,commandId);\n            });\n            // Otherwise since the last command was sent, we can send this one now.\n            else {\n                this.status=CHANNEL.RUNNING;\n                this.stream.write(command,args,commandId);\n            }\n        }\n\n        return promise;\n    }\n\n    /**\n     * Clear the command from cache\n     * @param {number} commandId \n     */\n    @Private\n    clearCommand(commandId) {\n        if (typeof commandId === typeof {}) {\n            if (commandId.cmd)\n                return this.clearCommand(commandId.cmd.id);\n            if (commandId.id)\n                return this.clearCommand(commandId.id);\n            return null;\n        }\n        this.debug>=DEBUG.DEBUG&&console.log(\"Clearing command cache for #\",commandId);\n        const cmd = this.cmd[commandId];\n        if (!cmd) return;\n        delete cmd.promise.cmd;\n        delete cmd.promise.resolve;\n        delete cmd.promise.reject;\n        delete cmd.promise;\n        delete this.cmd[commandId];\n        if (!Object.keys(this.cmd).length) {\n            if (this.closeOnDone) this.close();\n        }\n    }\n    /**\n     * Get the last command relative to the commandId\n     * @param {number} commandId \n     */\n    @Private\n    lastCommand(commandId) {\n        return this.cmd[commandId-1];\n    }\n\n    @Private\n    getCommand(commandId) {\n        if (!commandId) return null;\n        if (typeof commandId===typeof {}) {\n            if (commandId.cmd) return commandId.cmd;\n            else return null;\n        }\n        return this.cmd[commandId];\n    }\n\n    /**\n     * \n     * @param {string} command Command to send to device\n     * @param {array} args Arguments for command\n     * @param {object} promise object containing resolve and reject functions.\n     */\n    @Private\n    registerCommand(command,args,promise) {\n        this.cmdCount=this.cmdCount+1;\n        const commandId=this.cmdCount;\n        this.cmd[commandId]={id:commandId,cmd:{id:commandId,command,args},promise};\n        (function(id,p){\n            const race = Observable.race(\n                this.done\n                    .filter(\n                        data=>data.cmd&&data.cmd.id===id\n                    )\n                    // .do(\n                    //     d=>console.log(\"*** Done in %s:%s\",d.cmd.id,id)\n                    // )\n                    .take(1)\n              , this.trap\n                    .filter(\n                        data=>data.cmd&&data.cmd.id===id\n                    )\n                    // .do(\n                    //     d=>console.log(\"*** Trap in %s:%s\",d.cmd.id,id)\n                    // )\n                    .take(1)\n            ).take(1);\n\n            race.partition(data=>data.type==EVENT.TRAP||data.type===EVENT.TRAP_TAG)\n                .reduce((r,o,i)=>{\n                    if (i==0) {\n                        o.subscribe(error=>{\n                            this.debug>=DEBUG.DEBUG&&console.error(\"*** Register Command: trap\",id,error);\n                            this.status=CHANNEL.DONE;\n                            if (this.closeOnTrap) {\n                                this.status=CHANNEL.CLOSING;\n                                this.debug>=DEBUG.DEBUG&&console.log('Channel (%s):: read-done catch CLOSING',this.id);\n                                this.close(true);\n                            }\n                            p.reject(error);\n                            this.emit('trap',error);\n                        },null);\n                    } else return o;\n                },{})\n\n            const isListen= typeof command === 'object' ? command.indexOf('listen')>0 : command.split('/').indexOf('listen')>0;\n            this.data\n                .filter(data=>data.cmd.id===id)\n                .takeUntil(race)\n                .do(d=>this.debug>=DEBUG.SILLY&&console.log(\"*** Data in %s:%s\",d.cmd.id,id))\n                .reduce((acc,d)=>{\n                    if (d.data&&!isListen) acc.data=acc.data.concat([d.data]);\n                    return acc;\n                },{cmd:this.cmd[id].cmd,tag:this.id,data:[]})\n                .do(d=>this.debug>=DEBUG.SILLY&&console.log(\"*** Reduced Data in \",d))\n                .takeUntil(race.filter(data=>data.type==EVENT.TRAP||data.type===EVENT.TRAP_TAG))\n                .subscribe(data=>{\n                    this.debug>=DEBUG.SILLY&&console.log(\"*** Register Command: subscribe\",id,data);\n                    this.status=CHANNEL.DONE;\n                    this.bufferedStream.next(data);\n                    p.resolve(data);\n                    this.emit('done',data);\n                },\n                error=>{\n                    this.debug>=DEBUG.SILLY&&console.error(\"*** Register Command: error\",id,error);\n                },\n                // this should happen for every command\n                ()=>{\n                    this.debug>=DEBUG.SILLY&&console.log(\"*** Register Command: complete\",commandId);\n                    setTimeout(()=>this.clearCommand(id),50); // make sure all promises complete before running this.\n                });\n        }.bind(this))(commandId,promise);\n        return this.cmd[commandId].cmd;\n    }\n\n    /**\n     * Create a stream filtered by list of event types.\n     * @param {Observable} stream The stream representing the incoming data\n     * @param {Array} events list of events to filter by\n     * @return {Observable} The incoming stream filtered to only the packets having data.\n     */\n    createStream(stream,events) {\n        return this.read\n                   .filter(e=>events.indexOf(e.type)!=-1)\n                   .do(e=>this.debug>=DEBUG.DEBUG&&console.log('Channel (%s)::%s flatMap',e.tag,e.type))\n                   .flatMap(d=>{\n                       return Observable.of(d);\n                       // this.dataBuffer[d.cmd.id].push(d.data);\n                   });\n    }\n    /**\n     * \n     * @param {Object} data Sentence object from read stream\n     * @return {String} Command ID of sentence.\n     */\n    getCommandId(data) {\n        if (!data) return null;\n        if (typeof data === typeof {})\n            return this.getCommandId(data.tag);\n        return data.substring(data.lastIndexOf('-')+1);\n    }\n\n    // status() { return this.status }\n    close(force) { \n        if (this.status&CHANNEL.RUNNING) {\n            if (force)\n                Object.keys(this.cmd).forEach(id=>{\n                    this.stream.write('/cancel',[],id);\n                });\n            this.closeOnDone=true;\n            this.sync=true;\n            this.status=CHANNEL.CLOSING;\n            return;\n        }\n        if (this.status&CHANNEL.CLOSED) return;\n        this.status=CHANNEL.CLOSED;\n        this.debug>=DEBUG.INFO&&console.log('Channel (%s)::CLOSED',this.id);\n        this.bufferedStream.complete();\n        this.stream.close();\n        this.removeAllListeners(EVENT.DONE);\n        this.removeAllListeners(EVENT.DATA);\n        this.removeAllListeners(EVENT.TRAP);\n    }\n\n    /** Data stream returns each sentence from the device as it is received. **/\n    get data() {\n        return this.data;\n    }\n\n    /** Done stream buffers every sentence and returns all sentences at once.\n        Don't use this stream when \"listen\"ing to data. Done never comes on a watch/listen command.\n        A trap signals the end of the data of a listen command.\n     **/\n    get done() {\n        return this.bufferedStream;\n    }\n\n    /** When a trap occurs, the trap sentence flows through this stream **/\n    get trap() {\n        // TRAP_TAG is the only one that *should* make it here.\n        return this.trap;\n    }\n\n    /** This is the raw stream. Everything for this channel comes through here. **/\n    get stream() {\n        return this.read;\n    }\n\n    /**\n     * Get the current status of this channel.\n     * @return The status code\n     */\n    get status() {\n        return this.status;\n    }\n\n    /**\n     * Commands are sent to the device in a synchronous manor. This is enabled by default.\n     * @param {sync} sync If passed, this sets the value of sync.\n     * @return If sync parameter is not passed, the value of sync is returned. Otherwise this channel object is returned.\n     */\n    sync(...args) {\n        if (args.length) {\n            this.sync=!!args[0];\n            return this;\n        }\n        return this.sync;\n    }\n\n    /**\n     * \n     * @param {Observable} stream Take incoming commands to write to this channel from the provided stream. The channel will stop taking commands if a fatal error occurs, or if the channel is closing or closed.\n     * \n     */\n    pipeFrom(stream) {\n        if (this.status&(CHANNEL.DONE|CHANNEL.OPEN)) {\n            this.status=CHANNEL.RUNNING;\n            stream.takeWhile(o=>!(this.status&(CHANNEL.FATAL|CHANNEL.CLOSING|CHANNEL.CLOSED))).subscribe(\n                d=>this.write(d),\n                ()=>{\n                    this.status=CHANNEL.DONE;\n                    this.stream.close();\n                },\n                ()=>{\n                    this.status=CHANNEL.DONE;\n                    this.stream.close();\n                }\n            );\n        }\n    }\n\n    getId(){return this.id}\n\n    on(event,func) {\n        const ret=super.on(event,func);\n        this.setupEventSubscription(event,this.getStreamByEventType(event));\n        return ret;\n    }\n\n    addEventListener(event,func) {\n        const ret=super.addEventListener(event,func);\n        this.setupEventSubscription(event,this.getStreamByEventType(event));\n        return ret;\n    }\n\n    once(event,func) {\n        const ret=super.once(event,func);\n        this.setupEventSubscription(event,this.getStreamByEventType(event));\n        return ret;\n    }\n\n    /**\n     * @param {String} event The event name to map to an observable stream.\n     * @return Observable stream.\n     */\n    @Private\n    getStreamByEventType(event) {\n        switch(event) {\n            case EVENT.DONE:\n                return this.bufferedStream;\n            case EVENT.TRAP:\n                return this.trap;\n            case EVENT.FATAL:\n                return this.fatal;\n            default:\n                return this.read;\n        }\n    }\n\n    /**\n     * @param {String} event The name of the event to setup for emitting.\n     * @param {Observable} stream The stream to listen for events.\n     * @return {Observable} Stream that will send out a copy of its input as long as there are event callbacks for the event requested.\n     */\n    @Private\n    setupEventSubscription(event,stream) {\n        if (this.listeners(event)) return;\n        // take from the stream until there are no more event listeners for that event.\n        const listenerStream = stream.takeWhile(o=>!this.listeners(event));\n        listenerStream.subscribe(e=>{\n            this.emit(event,e);\n        });\n        return listenerStream;\n    }\n\n    /** When the done sentence arrives, close the channel. This only works in synchronous mode. **/\n    closeOnDone(...args) { \n        if (args.length)\n            this.closeOnDone=!!args[0];\n        else this.closeOnDone;\n        return this;\n    }\n\n    /** If trap occurs, consider it closed. **/\n    closeOnTrap(...args)  {\n        if (args.length)\n            this.closeOnTrap=!!args[0];\n        else return this.closeOnTrap;\n        return this;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Channel.js"],"sourceRoot":""}